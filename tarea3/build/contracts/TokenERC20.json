{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/TokenERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenERC20.sol",
    "exportedSymbols": {
      "TokenERC20": [
        396
      ],
      "tokenRecipient": [
        13
      ]
    },
    "id": 397,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "tokenRecipient",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 13,
        "linearizedBaseContracts": [
          13
        ],
        "name": "tokenRecipient",
        "nameLocation": "66:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8f4ffcb1",
            "id": 12,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "97:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "121:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "113:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "136:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "128:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "128:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "152:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "144:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "144:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "175:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "160:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "160:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "112:74:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:0:0"
            },
            "scope": 13,
            "src": "88:108:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 397,
        "src": "56:143:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TokenERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 396,
        "linearizedBaseContracts": [
          396
        ],
        "name": "TokenERC20",
        "nameLocation": "210:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 15,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "278:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "264:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "264:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 17,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "302:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "288:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "288:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 20,
            "mutability": "mutable",
            "name": "decimals",
            "nameLocation": "327:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "314:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 18,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "314:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "338:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 22,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "433:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "418:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 21,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "418:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 26,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "534:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "498:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 25,
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "507:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "498:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 24,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "518:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd62ed3e",
            "id": 32,
            "mutability": "mutable",
            "name": "allowance",
            "nameLocation": "606:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 396,
            "src": "549:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "558:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "549:49:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 30,
                "keyType": {
                  "id": 28,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "578:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "569:28:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "589:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 40,
            "name": "Transfer",
            "nameLocation": "708:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "733:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "717:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "755:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "739:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "767:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "759:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:57:0"
            },
            "src": "702:72:0"
          },
          {
            "anonymous": false,
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 48,
            "name": "Approval",
            "nameLocation": "870:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "895:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "879:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "919:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "903:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "937:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "929:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "929:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "878:66:0"
            },
            "src": "864:81:0"
          },
          {
            "anonymous": false,
            "eventSelector": "cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5",
            "id": 54,
            "name": "Burn",
            "nameLocation": "1009:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1030:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1014:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1044:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "1036:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1036:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:37:0"
            },
            "src": "1003:48:0"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "1318:413:0",
              "statements": [
                {
                  "expression": {
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1328:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 65,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "1342:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1358:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 69,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "1372:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1364:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 67,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1364:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1364:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1358:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1342:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1328:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:53:0"
                },
                {
                  "expression": {
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 75,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "1439:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 78,
                      "indexExpression": {
                        "expression": {
                          "id": 76,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1449:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1449:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1439:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "1463:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1439:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:35:0"
                },
                {
                  "expression": {
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 82,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1538:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 83,
                      "name": "tokenName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1545:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1538:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 85,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:16:0"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1635:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87,
                      "name": "tokenSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "1644:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1635:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:20:0"
                }
              ]
            },
            "documentation": {
              "id": 55,
              "nodeType": "StructuredDocumentation",
              "src": "1057:132:0",
              "text": " Constructor function\n Initializes contract with initial supply tokens to the creator of the contract"
            },
            "id": 91,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "1223:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1215:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1260:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1246:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1293:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "1279:25:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1279:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1205:105:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:0:0"
            },
            "scope": 396,
            "src": "1194:537:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "1884:767:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 96,
                          "src": "1965:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1980:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1972:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1972:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1972:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1965:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1957:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1957:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1957:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 111,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2045:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 113,
                          "indexExpression": {
                            "id": 112,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "2055:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2045:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 114,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2065:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2045:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2037:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2037:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "2037:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 119,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "2121:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 121,
                            "indexExpression": {
                              "id": 120,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "2131:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2121:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 122,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "2138:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2121:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 124,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "2148:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 126,
                          "indexExpression": {
                            "id": 125,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 96,
                            "src": "2158:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2148:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2121:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2113:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2113:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "2113:50:0"
                },
                {
                  "assignments": [
                    131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 131,
                      "mutability": "mutable",
                      "name": "previousBalances",
                      "nameLocation": "2230:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "2225:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 130,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2225:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 139,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 132,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2249:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 134,
                      "indexExpression": {
                        "id": 133,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2259:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2249:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 135,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2268:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 137,
                      "indexExpression": {
                        "id": 136,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2278:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2268:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2249:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2225:57:0"
                },
                {
                  "expression": {
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 140,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2328:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 142,
                      "indexExpression": {
                        "id": 141,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2338:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2328:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 143,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2348:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2328:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 145,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:26:0"
                },
                {
                  "expression": {
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 146,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "2405:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 148,
                      "indexExpression": {
                        "id": 147,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2415:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2405:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 149,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2423:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2405:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2405:24:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 153,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2453:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 154,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 96,
                        "src": "2460:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 155,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "2465:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 152,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "2444:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2444:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "EmitStatement",
                  "src": "2439:33:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 159,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "2590:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 161,
                            "indexExpression": {
                              "id": 160,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 94,
                              "src": "2600:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2590:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 162,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "2609:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 164,
                            "indexExpression": {
                              "id": 163,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 96,
                              "src": "2619:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2609:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2590:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 166,
                          "name": "previousBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 131,
                          "src": "2627:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2590:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 158,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2583:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2583:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "2583:61:0"
                }
              ]
            },
            "documentation": {
              "id": 92,
              "nodeType": "StructuredDocumentation",
              "src": "1737:73:0",
              "text": " Internal transfer, only can be called by this contract"
            },
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1824:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "1842:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1834:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 96,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1857:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1849:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 95,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1867:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "1862:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1833:41:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1884:0:0"
            },
            "scope": 396,
            "src": "1815:836:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "2929:72:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 182,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2949:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2949:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 184,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "2961:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 185,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "2966:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 181,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "2939:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2939:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "2939:34:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2990:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 180,
                  "id": 189,
                  "nodeType": "Return",
                  "src": "2983:11:0"
                }
              ]
            },
            "documentation": {
              "id": 172,
              "nodeType": "StructuredDocumentation",
              "src": "2657:190:0",
              "text": " Transfer tokens\n Send `_value` tokens to `_to` from your account\n @param _to The address of the recipient\n @param _value the amount to send"
            },
            "functionSelector": "a9059cbb",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2861:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2878:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2870:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2870:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2891:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2883:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2883:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2869:29:0"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2920:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2915:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2915:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2914:14:0"
            },
            "scope": 396,
            "src": "2852:149:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "3366:195:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 204,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "3384:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 205,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "3394:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 207,
                            "indexExpression": {
                              "id": 206,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "3404:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3394:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 210,
                          "indexExpression": {
                            "expression": {
                              "id": 208,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3411:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3411:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3394:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3384:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3376:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3376:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "3376:47:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 214,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "3456:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 218,
                        "indexExpression": {
                          "id": 215,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 194,
                          "src": "3466:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3456:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 219,
                      "indexExpression": {
                        "expression": {
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3473:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3473:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3456:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 220,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "3488:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3456:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:38:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 224,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "3514:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 225,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "3521:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 226,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "3526:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 223,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "3504:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3504:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "3504:29:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3550:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 202,
                  "id": 230,
                  "nodeType": "Return",
                  "src": "3543:11:0"
                }
              ]
            },
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "3007:258:0",
              "text": " Transfer tokens from other address\n Send `_value` tokens to `_to` on behalf of `_from`\n @param _from The address of the sender\n @param _to The address of the recipient\n @param _value the amount to send"
            },
            "functionSelector": "23b872dd",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3279:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3300:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3292:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3315:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3307:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3307:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3328:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3320:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3291:44:0"
            },
            "returnParameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3357:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "3352:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3352:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3351:14:0"
            },
            "scope": 396,
            "src": "3270:291:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "3909:131:0",
              "statements": [
                {
                  "expression": {
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 242,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "3919:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 246,
                        "indexExpression": {
                          "expression": {
                            "id": 243,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3929:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3929:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3919:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 247,
                      "indexExpression": {
                        "id": 245,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3941:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3919:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 248,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "3953:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3919:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:40:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3983:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3983:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 254,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "3995:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 255,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 237,
                        "src": "4005:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 251,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "3974:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3974:38:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "EmitStatement",
                  "src": "3969:43:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4029:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 241,
                  "id": 259,
                  "nodeType": "Return",
                  "src": "4022:11:0"
                }
              ]
            },
            "documentation": {
              "id": 233,
              "nodeType": "StructuredDocumentation",
              "src": "3567:248:0",
              "text": " Set allowance for other address\n Allows `_spender` to spend no more than `_value` tokens on your behalf\n @param _spender The address authorized to spend\n @param _value the max amount they can spend"
            },
            "functionSelector": "095ea7b3",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3829:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "3845:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "3837:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3837:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3863:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "3855:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3855:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3836:34:0"
            },
            "returnParameters": {
              "id": 241,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3900:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "3895:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3894:14:0"
            },
            "scope": 396,
            "src": "3820:220:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "4557:226:0",
              "statements": [
                {
                  "assignments": [
                    275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "4582:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 301,
                      "src": "4567:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_tokenRecipient_$13",
                        "typeString": "contract tokenRecipient"
                      },
                      "typeName": {
                        "id": 274,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 273,
                          "name": "tokenRecipient",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 13,
                          "src": "4567:14:0"
                        },
                        "referencedDeclaration": 13,
                        "src": "4567:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_tokenRecipient_$13",
                          "typeString": "contract tokenRecipient"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 277,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "4607:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 276,
                      "name": "tokenRecipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "4592:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_tokenRecipient_$13_$",
                        "typeString": "type(contract tokenRecipient)"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4592:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_tokenRecipient_$13",
                      "typeString": "contract tokenRecipient"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4567:49:0"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 281,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "4638:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 282,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "4648:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 280,
                      "name": "approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "4630:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4630:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 300,
                  "nodeType": "IfStatement",
                  "src": "4626:151:0",
                  "trueBody": {
                    "id": 299,
                    "nodeType": "Block",
                    "src": "4657:120:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 287,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4695:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4695:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 289,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "4707:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 292,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4723:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenERC20_$396",
                                    "typeString": "contract TokenERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenERC20_$396",
                                    "typeString": "contract TokenERC20"
                                  }
                                ],
                                "id": 291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4715:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 290,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4715:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4715:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 294,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "4730:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 284,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "4671:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_tokenRecipient_$13",
                                "typeString": "contract tokenRecipient"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "receiveApproval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12,
                            "src": "4671:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,address,bytes memory) external"
                            }
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4671:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 296,
                        "nodeType": "ExpressionStatement",
                        "src": "4671:70:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4762:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 272,
                        "id": 298,
                        "nodeType": "Return",
                        "src": "4755:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 262,
              "nodeType": "StructuredDocumentation",
              "src": "4046:377:0",
              "text": " Set allowance for other address and notify\n Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\n @param _spender The address authorized to spend\n @param _value the max amount they can spend\n @param _extraData some extra information to send to the approved contract"
            },
            "functionSelector": "cae9ca51",
            "id": 302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveAndCall",
            "nameLocation": "4437:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 264,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "4460:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4452:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4452:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "4478:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4470:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4470:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "4499:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4486:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4451:59:0"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "4548:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "4543:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4543:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4542:14:0"
            },
            "scope": 396,
            "src": "4428:355:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 338,
              "nodeType": "Block",
              "src": "5009:308:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 311,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "5027:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 314,
                          "indexExpression": {
                            "expression": {
                              "id": 312,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5037:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5037:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5027:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 315,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 305,
                          "src": "5052:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5027:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5019:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5019:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 318,
                  "nodeType": "ExpressionStatement",
                  "src": "5019:40:0"
                },
                {
                  "expression": {
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 319,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "5105:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 322,
                      "indexExpression": {
                        "expression": {
                          "id": 320,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5115:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5115:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5105:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 323,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "5130:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5105:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:31:0"
                },
                {
                  "expression": {
                    "id": 328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 326,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "5185:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 327,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "5200:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5185:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 329,
                  "nodeType": "ExpressionStatement",
                  "src": "5185:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 331,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5270:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5270:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 333,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 305,
                        "src": "5282:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 330,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "5265:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5265:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "EmitStatement",
                  "src": "5260:29:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5306:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 309,
                  "id": 337,
                  "nodeType": "Return",
                  "src": "5299:11:0"
                }
              ]
            },
            "documentation": {
              "id": 303,
              "nodeType": "StructuredDocumentation",
              "src": "4789:155:0",
              "text": " Destroy tokens\n Remove `_value` tokens from the system irreversibly\n @param _value the amount of money to burn"
            },
            "functionSelector": "42966c68",
            "id": 339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "4958:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "4971:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "4963:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4963:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4962:16:0"
            },
            "returnParameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5000:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 339,
                  "src": "4995:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4995:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4994:14:0"
            },
            "scope": 396,
            "src": "4949:368:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "5649:524:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 350,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "5667:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 352,
                          "indexExpression": {
                            "id": 351,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 342,
                            "src": "5677:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5667:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 353,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "5687:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5667:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 349,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5659:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5659:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 356,
                  "nodeType": "ExpressionStatement",
                  "src": "5659:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 358,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "5770:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 359,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "5780:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 361,
                            "indexExpression": {
                              "id": 360,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 342,
                              "src": "5790:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5780:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 364,
                          "indexExpression": {
                            "expression": {
                              "id": 362,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5797:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5797:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5780:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5770:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5762:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5762:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 367,
                  "nodeType": "ExpressionStatement",
                  "src": "5762:47:0"
                },
                {
                  "expression": {
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 368,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "5841:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 370,
                      "indexExpression": {
                        "id": 369,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "5851:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5841:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 371,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "5861:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5841:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "5841:26:0"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 374,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "5939:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 378,
                        "indexExpression": {
                          "id": 375,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "5949:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5939:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 379,
                      "indexExpression": {
                        "expression": {
                          "id": 376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5956:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5956:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5939:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 380,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "5971:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5939:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "5939:38:0"
                },
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 383,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "6039:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 384,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 344,
                      "src": "6054:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6039:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "6039:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 388,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "6131:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 389,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 344,
                        "src": "6138:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 387,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "6126:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6126:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 391,
                  "nodeType": "EmitStatement",
                  "src": "6121:24:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6162:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 348,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "6155:11:0"
                }
              ]
            },
            "documentation": {
              "id": 340,
              "nodeType": "StructuredDocumentation",
              "src": "5323:242:0",
              "text": " Destroy tokens from other account\n Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n @param _from the address of the sender\n @param _value the amount of money to burn"
            },
            "functionSelector": "79cc6790",
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "5579:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5596:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "5588:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5588:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5611:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "5603:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5603:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5587:31:0"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5640:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "5635:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5635:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5634:14:0"
            },
            "scope": 396,
            "src": "5570:603:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 397,
        "src": "201:5974:0",
        "usedErrors": []
      }
    ],
    "src": "31:6144:0"
  },
  "bytecode": "60806040526002805460ff191660121790553480156200001e57600080fd5b5060405162000f0038038062000f0083398101604081905262000041916200016a565b600254620000549060ff16600a620002f3565b62000060908462000308565b600381905533600090815260046020526040812091909155620000848382620003b9565b506001620000938282620003b9565b5050505062000485565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000c557600080fd5b81516001600160401b0380821115620000e257620000e26200009d565b604051601f8301601f19908116603f011681019082821181831017156200010d576200010d6200009d565b816040528381526020925086838588010111156200012a57600080fd5b600091505b838210156200014e57858201830151818301840152908201906200012f565b83821115620001605760008385830101525b9695505050505050565b6000806000606084860312156200018057600080fd5b835160208501519093506001600160401b0380821115620001a057600080fd5b620001ae87838801620000b3565b93506040860151915080821115620001c557600080fd5b50620001d486828701620000b3565b9150509250925092565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000235578160001904821115620002195762000219620001de565b808516156200022757918102915b93841c9390800290620001f9565b509250929050565b6000826200024e57506001620002ed565b816200025d57506000620002ed565b81600181146200027657600281146200028157620002a1565b6001915050620002ed565b60ff841115620002955762000295620001de565b50506001821b620002ed565b5060208310610133831016604e8410600b8410161715620002c6575081810a620002ed565b620002d28383620001f4565b8060001904821115620002e957620002e9620001de565b0290505b92915050565b60006200030183836200023d565b9392505050565b6000816000190483118215151615620003255762000325620001de565b500290565b600181811c908216806200033f57607f821691505b6020821081036200036057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003b457600081815260208120601f850160051c810160208610156200038f5750805b601f850160051c820191505b81811015620003b0578281556001016200039b565b5050505b505050565b81516001600160401b03811115620003d557620003d56200009d565b620003ed81620003e684546200032a565b8462000366565b602080601f8311600181146200042557600084156200040c5750858301515b600019600386901b1c1916600185901b178555620003b0565b600085815260208120601f198616915b82811015620004565788860151825594840194600190910190840162000435565b5085821015620004755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610a6b80620004956000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461015657806379cc67901461017657806395d89b4114610189578063a9059cbb14610191578063cae9ca51146101a4578063dd62ed3e146101b757600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806342966c6814610143575b600080fd5b6100c16101e2565b6040516100ce9190610786565b60405180910390f35b6100ea6100e53660046107b5565b610270565b60405190151581526020016100ce565b61010360035481565b6040519081526020016100ce565b6100ea61011f3660046107df565b6102dc565b6002546101319060ff1681565b60405160ff90911681526020016100ce565b6100ea61015136600461081b565b61035b565b610103610164366004610834565b60046020526000908152604090205481565b6100ea6101843660046107b5565b6103f1565b6100c161050b565b6100ea61019f3660046107b5565b610518565b6100ea6101b2366004610865565b61052e565b6101036101c5366004610930565b600560209081526000928352604080842090915290825290205481565b600080546101ef90610963565b80601f016020809104026020016040519081016040528092919081815260200182805461021b90610963565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102cb9086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561030c57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091528120805484929061033f9084906109b3565b9091555061035090508484846105b6565b5060015b9392505050565b3360009081526004602052604081205482111561037757600080fd5b33600090815260046020526040812080548492906103969084906109b3565b9250508190555081600360008282546103af91906109b3565b909155505060405182815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a2506001919050565b6001600160a01b03821660009081526004602052604081205482111561041657600080fd5b6001600160a01b038316600090815260056020908152604080832033845290915290205482111561044657600080fd5b6001600160a01b0383166000908152600460205260408120805484929061046e9084906109b3565b90915550506001600160a01b0383166000908152600560209081526040808320338452909152812080548492906104a69084906109b3565b9250508190555081600360008282546104bf91906109b3565b90915550506040518281526001600160a01b038416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a250600192915050565b600180546101ef90610963565b60006105253384846105b6565b50600192915050565b60008361053b8185610270565b156105ae57604051638f4ffcb160e01b81526001600160a01b03821690638f4ffcb1906105729033908890309089906004016109ca565b600060405180830381600087803b15801561058c57600080fd5b505af11580156105a0573d6000803e3d6000fd5b505050506001915050610354565b509392505050565b6001600160a01b0382166105c957600080fd5b6001600160a01b0383166000908152600460205260409020548111156105ee57600080fd5b6001600160a01b0382166000908152600460205260409020546106118282610a07565b101561061c57600080fd5b6001600160a01b03808316600090815260046020526040808220549286168252812054909161064a91610a07565b6001600160a01b0385166000908152600460205260408120805492935084929091906106779084906109b3565b90915550506001600160a01b038316600090815260046020526040812080548492906106a4908490610a07565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f091815260200190565b60405180910390a36001600160a01b03808416600090815260046020526040808220549287168252902054829161072691610a07565b1461073357610733610a1f565b50505050565b6000815180845260005b8181101561075f57602081850181015186830182015201610743565b81811115610771576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006103546020830184610739565b80356001600160a01b03811681146107b057600080fd5b919050565b600080604083850312156107c857600080fd5b6107d183610799565b946020939093013593505050565b6000806000606084860312156107f457600080fd5b6107fd84610799565b925061080b60208501610799565b9150604084013590509250925092565b60006020828403121561082d57600080fd5b5035919050565b60006020828403121561084657600080fd5b61035482610799565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561087a57600080fd5b61088384610799565b925060208401359150604084013567ffffffffffffffff808211156108a757600080fd5b818601915086601f8301126108bb57600080fd5b8135818111156108cd576108cd61084f565b604051601f8201601f19908116603f011681019083821181831017156108f5576108f561084f565b8160405282815289602084870101111561090e57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806040838503121561094357600080fd5b61094c83610799565b915061095a60208401610799565b90509250929050565b600181811c9082168061097757607f821691505b60208210810361099757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109c5576109c561099d565b500390565b6001600160a01b03858116825260208201859052831660408201526080606082018190526000906109fd90830184610739565b9695505050505050565b60008219821115610a1a57610a1a61099d565b500190565b634e487b7160e01b600052600160045260246000fdfea26469706673582212204a1458ad2e6b593de18120c69ccc344c37b73b07bdf2b18f84c6ace880eceb9b64736f6c634300080f0033",
  "bytecodeSha1": "bbee73edc947974d714ca63ce903e13c1d5af0ab",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "TokenERC20",
  "coverageMap": {
    "branches": {
      "0": {
        "TokenERC20._transfer": {
          "35": [
            1965,
            1984,
            true
          ],
          "36": [
            2045,
            2071,
            true
          ],
          "37": [
            2121,
            2162,
            true
          ]
        },
        "TokenERC20.approveAndCall": {
          "34": [
            4630,
            4655,
            false
          ]
        },
        "TokenERC20.burn": {
          "31": [
            5027,
            5058,
            true
          ]
        },
        "TokenERC20.burnFrom": {
          "32": [
            5667,
            5693,
            true
          ],
          "33": [
            5770,
            5808,
            true
          ]
        },
        "TokenERC20.transferFrom": {
          "30": [
            3384,
            3422,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "TokenERC20._transfer": {
          "23": [
            1957,
            1985
          ],
          "24": [
            2037,
            2072
          ],
          "25": [
            2113,
            2163
          ],
          "26": [
            2328,
            2354
          ],
          "27": [
            2405,
            2429
          ],
          "28": [
            2439,
            2472
          ],
          "29": [
            2583,
            2644
          ]
        },
        "TokenERC20.approve": {
          "0": [
            3919,
            3959
          ],
          "1": [
            3969,
            4012
          ],
          "2": [
            4022,
            4033
          ]
        },
        "TokenERC20.approveAndCall": {
          "21": [
            4671,
            4741
          ],
          "22": [
            4755,
            4766
          ]
        },
        "TokenERC20.burn": {
          "7": [
            5019,
            5059
          ],
          "8": [
            5105,
            5136
          ],
          "9": [
            5185,
            5206
          ],
          "10": [
            5260,
            5289
          ],
          "11": [
            5299,
            5310
          ]
        },
        "TokenERC20.burnFrom": {
          "12": [
            5659,
            5694
          ],
          "13": [
            5762,
            5809
          ],
          "14": [
            5841,
            5867
          ],
          "15": [
            5939,
            5977
          ],
          "16": [
            6039,
            6060
          ],
          "17": [
            6121,
            6145
          ],
          "18": [
            6155,
            6166
          ]
        },
        "TokenERC20.transfer": {
          "19": [
            2939,
            2973
          ],
          "20": [
            2983,
            2994
          ]
        },
        "TokenERC20.transferFrom": {
          "3": [
            3376,
            3423
          ],
          "4": [
            3456,
            3494
          ],
          "5": [
            3504,
            3533
          ],
          "6": [
            3543,
            3554
          ]
        }
      }
    }
  },
  "dependencies": [
    "tokenRecipient"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a082311461015657806379cc67901461017657806395d89b4114610189578063a9059cbb14610191578063cae9ca51146101a4578063dd62ed3e146101b757600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd14610111578063313ce5671461012457806342966c6814610143575b600080fd5b6100c16101e2565b6040516100ce9190610786565b60405180910390f35b6100ea6100e53660046107b5565b610270565b60405190151581526020016100ce565b61010360035481565b6040519081526020016100ce565b6100ea61011f3660046107df565b6102dc565b6002546101319060ff1681565b60405160ff90911681526020016100ce565b6100ea61015136600461081b565b61035b565b610103610164366004610834565b60046020526000908152604090205481565b6100ea6101843660046107b5565b6103f1565b6100c161050b565b6100ea61019f3660046107b5565b610518565b6100ea6101b2366004610865565b61052e565b6101036101c5366004610930565b600560209081526000928352604080842090915290825290205481565b600080546101ef90610963565b80601f016020809104026020016040519081016040528092919081815260200182805461021b90610963565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102cb9086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260056020908152604080832033845290915281205482111561030c57600080fd5b6001600160a01b03841660009081526005602090815260408083203384529091528120805484929061033f9084906109b3565b9091555061035090508484846105b6565b5060015b9392505050565b3360009081526004602052604081205482111561037757600080fd5b33600090815260046020526040812080548492906103969084906109b3565b9250508190555081600360008282546103af91906109b3565b909155505060405182815233907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a2506001919050565b6001600160a01b03821660009081526004602052604081205482111561041657600080fd5b6001600160a01b038316600090815260056020908152604080832033845290915290205482111561044657600080fd5b6001600160a01b0383166000908152600460205260408120805484929061046e9084906109b3565b90915550506001600160a01b0383166000908152600560209081526040808320338452909152812080548492906104a69084906109b3565b9250508190555081600360008282546104bf91906109b3565b90915550506040518281526001600160a01b038416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a250600192915050565b600180546101ef90610963565b60006105253384846105b6565b50600192915050565b60008361053b8185610270565b156105ae57604051638f4ffcb160e01b81526001600160a01b03821690638f4ffcb1906105729033908890309089906004016109ca565b600060405180830381600087803b15801561058c57600080fd5b505af11580156105a0573d6000803e3d6000fd5b505050506001915050610354565b509392505050565b6001600160a01b0382166105c957600080fd5b6001600160a01b0383166000908152600460205260409020548111156105ee57600080fd5b6001600160a01b0382166000908152600460205260409020546106118282610a07565b101561061c57600080fd5b6001600160a01b03808316600090815260046020526040808220549286168252812054909161064a91610a07565b6001600160a01b0385166000908152600460205260408120805492935084929091906106779084906109b3565b90915550506001600160a01b038316600090815260046020526040812080548492906106a4908490610a07565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f091815260200190565b60405180910390a36001600160a01b03808416600090815260046020526040808220549287168252902054829161072691610a07565b1461073357610733610a1f565b50505050565b6000815180845260005b8181101561075f57602081850181015186830182015201610743565b81811115610771576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006103546020830184610739565b80356001600160a01b03811681146107b057600080fd5b919050565b600080604083850312156107c857600080fd5b6107d183610799565b946020939093013593505050565b6000806000606084860312156107f457600080fd5b6107fd84610799565b925061080b60208501610799565b9150604084013590509250925092565b60006020828403121561082d57600080fd5b5035919050565b60006020828403121561084657600080fd5b61035482610799565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561087a57600080fd5b61088384610799565b925060208401359150604084013567ffffffffffffffff808211156108a757600080fd5b818601915086601f8301126108bb57600080fd5b8135818111156108cd576108cd61084f565b604051601f8201601f19908116603f011681019083821181831017156108f5576108f561084f565b8160405282815289602084870101111561090e57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000806040838503121561094357600080fd5b61094c83610799565b915061095a60208401610799565b90509250929050565b600181811c9082168061097757607f821691505b60208210810361099757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156109c5576109c561099d565b500390565b6001600160a01b03858116825260208201859052831660408201526080606082018190526000906109fd90830184610739565b9695505050505050565b60008219821115610a1a57610a1a61099d565b500190565b634e487b7160e01b600052600160045260246000fdfea26469706673582212204a1458ad2e6b593de18120c69ccc344c37b73b07bdf2b18f84c6ace880eceb9b64736f6c634300080f0033",
  "deployedSourceMap": "201:5974:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;264:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3820:220;;;;;;:::i;:::-;;:::i;:::-;;;1318:14:1;;1311:22;1293:41;;1281:2;1266:18;3820:220:0;1153:187:1;418:26:0;;;;;;;;;1491:25:1;;;1479:2;1464:18;418:26:0;1345:177:1;3270:291:0;;;;;;:::i;:::-;;:::i;314:26::-;;;;;;;;;;;;2032:4:1;2020:17;;;2002:36;;1990:2;1975:18;314:26:0;1860:184:1;4949:368:0;;;;;;:::i;:::-;;:::i;498:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;5570:603;;;;;;:::i;:::-;;:::i;288:20::-;;;:::i;2852:149::-;;;;;;:::i;:::-;;:::i;4428:355::-;;;;;;:::i;:::-;;:::i;549:66::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;264:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3820:220::-;3929:10;3895:12;3919:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;3919:31:0;;;;;;;;;;:40;;;3974:38;3895:12;;3919:31;;3974:38;;;;3953:6;1491:25:1;;1479:2;1464:18;;1345:177;3974:38:0;;;;;;;;-1:-1:-1;4029:4:0;3820:220;;;;:::o;3270:291::-;-1:-1:-1;;;;;3394:16:0;;3352:12;3394:16;;;:9;:16;;;;;;;;3411:10;3394:28;;;;;;;;3384:38;;;3376:47;;;;;;-1:-1:-1;;;;;3456:16:0;;;;;;:9;:16;;;;;;;;3473:10;3456:28;;;;;;;:38;;3488:6;;3456:16;:38;;3488:6;;3456:38;:::i;:::-;;;;-1:-1:-1;3504:29:0;;-1:-1:-1;3514:5:0;3521:3;3526:6;3504:9;:29::i;:::-;-1:-1:-1;3550:4:0;3270:291;;;;;;:::o;4949:368::-;5037:10;4995:12;5027:21;;;:9;:21;;;;;;:31;-1:-1:-1;5027:31:0;5019:40;;;;;;5115:10;5105:21;;;;:9;:21;;;;;:31;;5130:6;;5105:21;:31;;5130:6;;5105:31;:::i;:::-;;;;;;;;5200:6;5185:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;5265:24:0;;1491:25:1;;;5270:10:0;;5265:24;;1479:2:1;1464:18;5265:24:0;;;;;;;-1:-1:-1;5306:4:0;;4949:368;-1:-1:-1;4949:368:0:o;5570:603::-;-1:-1:-1;;;;;5667:16:0;;5635:12;5667:16;;;:9;:16;;;;;;:26;-1:-1:-1;5667:26:0;5659:35;;;;;;-1:-1:-1;;;;;5780:16:0;;;;;;:9;:16;;;;;;;;5797:10;5780:28;;;;;;;;5770:38;;;5762:47;;;;;;-1:-1:-1;;;;;5841:16:0;;;;;;:9;:16;;;;;:26;;5861:6;;5841:16;:26;;5861:6;;5841:26;:::i;:::-;;;;-1:-1:-1;;;;;;;5939:16:0;;;;;;:9;:16;;;;;;;;5956:10;5939:28;;;;;;;:38;;5971:6;;5939:16;:38;;5971:6;;5939:38;:::i;:::-;;;;;;;;6054:6;6039:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;6126:19:0;;1491:25:1;;;-1:-1:-1;;;;;6126:19:0;;;;;1479:2:1;1464:18;6126:19:0;;;;;;;-1:-1:-1;6162:4:0;5570:603;;;;:::o;288:20::-;;;;;;;:::i;2852:149::-;2915:12;2939:34;2949:10;2961:3;2966:6;2939:9;:34::i;:::-;-1:-1:-1;2990:4:0;2852:149;;;;:::o;4428:355::-;4543:12;4607:8;4630:25;4607:8;4648:6;4630:7;:25::i;:::-;4626:151;;;4671:70;;-1:-1:-1;;;4671:70:0;;-1:-1:-1;;;;;4671:23:0;;;;;:70;;4695:10;;4707:6;;4723:4;;4730:10;;4671:70;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4762:4;4755:11;;;;;4626:151;4557:226;4428:355;;;;;:::o;1815:836::-;-1:-1:-1;;;;;1965:19:0;;1957:28;;;;;;-1:-1:-1;;;;;2045:16:0;;;;;;:9;:16;;;;;;:26;-1:-1:-1;2045:26:0;2037:35;;;;;;-1:-1:-1;;;;;2148:14:0;;;;;;:9;:14;;;;;;2121:23;2138:6;2148:14;2121:23;:::i;:::-;:41;;2113:50;;;;;;-1:-1:-1;;;;;2268:14:0;;;2225:21;2268:14;;;:9;:14;;;;;;;2249:16;;;;;;;;2225:21;;2249:33;;;:::i;:::-;-1:-1:-1;;;;;2328:16:0;;;;;;:9;:16;;;;;:26;;2225:57;;-1:-1:-1;2348:6:0;;2328:16;;;:26;;2348:6;;2328:26;:::i;:::-;;;;-1:-1:-1;;;;;;;2405:14:0;;;;;;:9;:14;;;;;:24;;2423:6;;2405:14;:24;;2423:6;;2405:24;:::i;:::-;;;;;;;;2460:3;-1:-1:-1;;;;;2444:28:0;2453:5;-1:-1:-1;;;;;2444:28:0;;2465:6;2444:28;;;;1491:25:1;;1479:2;1464:18;;1345:177;2444:28:0;;;;;;;;-1:-1:-1;;;;;2609:14:0;;;;;;;:9;:14;;;;;;;2590:16;;;;;;;;2627;;2590:33;;;:::i;:::-;:53;2583:61;;;;:::i;:::-;1884:767;1815:836;;;:::o;14:472:1:-;56:3;94:5;88:12;121:6;116:3;109:19;146:1;156:162;170:6;167:1;164:13;156:162;;;232:4;288:13;;;284:22;;278:29;260:11;;;256:20;;249:59;185:12;156:162;;;336:6;333:1;330:13;327:87;;;402:1;395:4;386:6;381:3;377:16;373:27;366:38;327:87;-1:-1:-1;468:2:1;447:15;-1:-1:-1;;443:29:1;434:39;;;;475:4;430:50;;14:472;-1:-1:-1;;14:472:1:o;491:220::-;640:2;629:9;622:21;603:4;660:45;701:2;690:9;686:18;678:6;660:45;:::i;716:173::-;784:20;;-1:-1:-1;;;;;833:31:1;;823:42;;813:70;;879:1;876;869:12;813:70;716:173;;;:::o;894:254::-;962:6;970;1023:2;1011:9;1002:7;998:23;994:32;991:52;;;1039:1;1036;1029:12;991:52;1062:29;1081:9;1062:29;:::i;:::-;1052:39;1138:2;1123:18;;;;1110:32;;-1:-1:-1;;;894:254:1:o;1527:328::-;1604:6;1612;1620;1673:2;1661:9;1652:7;1648:23;1644:32;1641:52;;;1689:1;1686;1679:12;1641:52;1712:29;1731:9;1712:29;:::i;:::-;1702:39;;1760:38;1794:2;1783:9;1779:18;1760:38;:::i;:::-;1750:48;;1845:2;1834:9;1830:18;1817:32;1807:42;;1527:328;;;;;:::o;2049:180::-;2108:6;2161:2;2149:9;2140:7;2136:23;2132:32;2129:52;;;2177:1;2174;2167:12;2129:52;-1:-1:-1;2200:23:1;;2049:180;-1:-1:-1;2049:180:1:o;2234:186::-;2293:6;2346:2;2334:9;2325:7;2321:23;2317:32;2314:52;;;2362:1;2359;2352:12;2314:52;2385:29;2404:9;2385:29;:::i;2425:127::-;2486:10;2481:3;2477:20;2474:1;2467:31;2517:4;2514:1;2507:15;2541:4;2538:1;2531:15;2557:1063;2643:6;2651;2659;2712:2;2700:9;2691:7;2687:23;2683:32;2680:52;;;2728:1;2725;2718:12;2680:52;2751:29;2770:9;2751:29;:::i;:::-;2741:39;;2827:2;2816:9;2812:18;2799:32;2789:42;;2882:2;2871:9;2867:18;2854:32;2905:18;2946:2;2938:6;2935:14;2932:34;;;2962:1;2959;2952:12;2932:34;3000:6;2989:9;2985:22;2975:32;;3045:7;3038:4;3034:2;3030:13;3026:27;3016:55;;3067:1;3064;3057:12;3016:55;3103:2;3090:16;3125:2;3121;3118:10;3115:36;;;3131:18;;:::i;:::-;3206:2;3200:9;3174:2;3260:13;;-1:-1:-1;;3256:22:1;;;3280:2;3252:31;3248:40;3236:53;;;3304:18;;;3324:22;;;3301:46;3298:72;;;3350:18;;:::i;:::-;3390:10;3386:2;3379:22;3425:2;3417:6;3410:18;3465:7;3460:2;3455;3451;3447:11;3443:20;3440:33;3437:53;;;3486:1;3483;3476:12;3437:53;3542:2;3537;3533;3529:11;3524:2;3516:6;3512:15;3499:46;3587:1;3582:2;3577;3569:6;3565:15;3561:24;3554:35;3608:6;3598:16;;;;;;;2557:1063;;;;;:::o;3625:260::-;3693:6;3701;3754:2;3742:9;3733:7;3729:23;3725:32;3722:52;;;3770:1;3767;3760:12;3722:52;3793:29;3812:9;3793:29;:::i;:::-;3783:39;;3841:38;3875:2;3864:9;3860:18;3841:38;:::i;:::-;3831:48;;3625:260;;;;;:::o;3890:380::-;3969:1;3965:12;;;;4012;;;4033:61;;4087:4;4079:6;4075:17;4065:27;;4033:61;4140:2;4132:6;4129:14;4109:18;4106:38;4103:161;;4186:10;4181:3;4177:20;4174:1;4167:31;4221:4;4218:1;4211:15;4249:4;4246:1;4239:15;4103:161;;3890:380;;;:::o;4275:127::-;4336:10;4331:3;4327:20;4324:1;4317:31;4367:4;4364:1;4357:15;4391:4;4388:1;4381:15;4407:125;4447:4;4475:1;4472;4469:8;4466:34;;;4480:18;;:::i;:::-;-1:-1:-1;4517:9:1;;4407:125::o;4537:489::-;-1:-1:-1;;;;;4806:15:1;;;4788:34;;4853:2;4838:18;;4831:34;;;4901:15;;4896:2;4881:18;;4874:43;4953:3;4948:2;4933:18;;4926:31;;;4731:4;;4974:46;;5000:19;;4992:6;4974:46;:::i;:::-;4966:54;4537:489;-1:-1:-1;;;;;;4537:489:1:o;5031:128::-;5071:3;5102:1;5098:6;5095:1;5092:13;5089:39;;;5108:18;;:::i;:::-;-1:-1:-1;5144:9:1;;5031:128::o;5164:127::-;5225:10;5220:3;5216:20;5213:1;5206:31;5256:4;5253:1;5246:15;5280:4;5277:1;5270:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "notice": "Set allowance for other address Allows `_spender` to spend no more than `_value` tokens on your behalf",
        "params": {
          "_spender": "The address authorized to spend",
          "_value": "the max amount they can spend"
        }
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "Set allowance for other address and notify Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it",
        "params": {
          "_extraData": "some extra information to send to the approved contract",
          "_spender": "The address authorized to spend",
          "_value": "the max amount they can spend"
        }
      },
      "burn(uint256)": {
        "notice": "Destroy tokens Remove `_value` tokens from the system irreversibly",
        "params": {
          "_value": "the amount of money to burn"
        }
      },
      "burnFrom(address,uint256)": {
        "notice": "Destroy tokens from other account Remove `_value` tokens from the system irreversibly on behalf of `_from`.",
        "params": {
          "_from": "the address of the sender",
          "_value": "the amount of money to burn"
        }
      },
      "constructor": {
        "notice": "Constructor function Initializes contract with initial supply tokens to the creator of the contract"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer tokens Send `_value` tokens to `_to` from your account",
        "params": {
          "_to": "The address of the recipient",
          "_value": "the amount to send"
        }
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer tokens from other address Send `_value` tokens to `_to` on behalf of `_from`",
        "params": {
          "_from": "The address of the sender",
          "_to": "The address of the recipient",
          "_value": "the amount to send"
        }
      }
    },
    "version": 1
  },
  "offset": [
    201,
    6175
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x143 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x786 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x103 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x131 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0xEA PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x81B JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH2 0x103 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x50B JUMP JUMPDEST PUSH2 0xEA PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x7B5 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH2 0xEA PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x865 JUMP JUMPDEST PUSH2 0x52E JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x1EF SWAP1 PUSH2 0x963 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21B SWAP1 PUSH2 0x963 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x268 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x23D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x268 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x2CB SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x33F SWAP1 DUP5 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x350 SWAP1 POP DUP5 DUP5 DUP5 PUSH2 0x5B6 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x396 SWAP1 DUP5 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x46E SWAP1 DUP5 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x4A6 SWAP1 DUP5 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x1EF SWAP1 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 CALLER DUP5 DUP5 PUSH2 0x5B6 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x53B DUP2 DUP6 PUSH2 0x270 JUMP JUMPDEST ISZERO PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x8F4FFCB1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x8F4FFCB1 SWAP1 PUSH2 0x572 SWAP1 CALLER SWAP1 DUP9 SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP PUSH2 0x354 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x5EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x611 DUP3 DUP3 PUSH2 0xA07 JUMP JUMPDEST LT ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP7 AND DUP3 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x64A SWAP2 PUSH2 0xA07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP5 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x677 SWAP1 DUP5 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A4 SWAP1 DUP5 SWAP1 PUSH2 0xA07 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP3 DUP8 AND DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP3 SWAP2 PUSH2 0x726 SWAP2 PUSH2 0xA07 JUMP JUMPDEST EQ PUSH2 0x733 JUMPI PUSH2 0x733 PUSH2 0xA1F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x75F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x743 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x771 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x354 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x739 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D1 DUP4 PUSH2 0x799 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7FD DUP5 PUSH2 0x799 JUMP JUMPDEST SWAP3 POP PUSH2 0x80B PUSH1 0x20 DUP6 ADD PUSH2 0x799 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x82D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x354 DUP3 PUSH2 0x799 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x883 DUP5 PUSH2 0x799 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x8CD JUMPI PUSH2 0x8CD PUSH2 0x84F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x8F5 JUMPI PUSH2 0x8F5 PUSH2 0x84F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x90E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94C DUP4 PUSH2 0x799 JUMP JUMPDEST SWAP2 POP PUSH2 0x95A PUSH1 0x20 DUP5 ADD PUSH2 0x799 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x977 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x997 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9C5 JUMPI PUSH2 0x9C5 PUSH2 0x99D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x9FD SWAP1 DUP4 ADD DUP5 PUSH2 0x739 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xA1A JUMPI PUSH2 0xA1A PUSH2 0x99D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A EQ PC 0xAD 0x2E PUSH12 0x593DE18120C69CCC344C37B7 EXTCODESIZE SMOD 0xBD CALLCODE 0xB1 DUP16 DUP5 0xC6 0xAC 0xE8 DUP1 0xEC 0xEB SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        201,
        6175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "38": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "49": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "53": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x79CC6790"
    },
    "60": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x176"
    },
    "64": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x189"
    },
    "75": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x191"
    },
    "86": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCAE9CA51"
    },
    "93": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4"
    },
    "97": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B7"
    },
    "108": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7"
    },
    "135": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFA"
    },
    "146": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "157": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "168": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x42966C68"
    },
    "175": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "179": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        201,
        6175
      ],
      "op": "REVERT",
      "path": "0"
    },
    "185": {
      "offset": [
        264,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "189": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E2"
    },
    "192": {
      "fn": null,
      "jump": "i",
      "offset": [
        264,
        282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "196": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "200": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x786"
    },
    "205": {
      "fn": null,
      "jump": "i",
      "offset": [
        264,
        282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "209": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "SUB",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        264,
        282
      ],
      "op": "RETURN",
      "path": "0"
    },
    "215": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "216": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "219": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5"
    },
    "222": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "223": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "225": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B5"
    },
    "228": {
      "fn": "TokenERC20.approve",
      "jump": "i",
      "offset": [
        3820,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "229": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "230": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270"
    },
    "233": {
      "fn": "TokenERC20.approve",
      "jump": "i",
      "offset": [
        3820,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "234": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "235": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "237": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "238": {
      "op": "SWAP1"
    },
    "239": {
      "op": "ISZERO"
    },
    "240": {
      "op": "ISZERO"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "MSTORE"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "245": {
      "op": "ADD"
    },
    "246": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "249": {
      "op": "JUMP"
    },
    "250": {
      "offset": [
        418,
        444
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "251": {
      "fn": "TokenERC20.approve",
      "offset": [
        418,
        444
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "254": {
      "fn": "TokenERC20.approve",
      "offset": [
        418,
        444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "256": {
      "fn": "TokenERC20.approve",
      "offset": [
        418,
        444
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "257": {
      "fn": "TokenERC20.approve",
      "offset": [
        418,
        444
      ],
      "op": "DUP2",
      "path": "0"
    },
    "258": {
      "fn": "TokenERC20.approve",
      "offset": [
        418,
        444
      ],
      "op": "JUMP",
      "path": "0"
    },
    "259": {
      "fn": "TokenERC20.approve",
      "offset": [
        418,
        444
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "260": {
      "fn": "TokenERC20.approve",
      "offset": [
        418,
        444
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "262": {
      "fn": "TokenERC20.approve",
      "offset": [
        418,
        444
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "263": {
      "op": "SWAP1"
    },
    "264": {
      "op": "DUP2"
    },
    "265": {
      "op": "MSTORE"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "268": {
      "op": "ADD"
    },
    "269": {
      "offset": [
        418,
        444
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "272": {
      "op": "JUMP"
    },
    "273": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "274": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "277": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F"
    },
    "280": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "281": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "283": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DF"
    },
    "286": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        3270,
        3561
      ],
      "op": "JUMP",
      "path": "0"
    },
    "287": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "288": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "291": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        3270,
        3561
      ],
      "op": "JUMP",
      "path": "0"
    },
    "292": {
      "offset": [
        314,
        340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "295": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "296": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131"
    },
    "299": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "300": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "302": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "AND",
      "path": "0"
    },
    "303": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "DUP2",
      "path": "0"
    },
    "304": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "305": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "306": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "308": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        314,
        340
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "309": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "311": {
      "op": "SWAP1"
    },
    "312": {
      "op": "SWAP2"
    },
    "313": {
      "op": "AND"
    },
    "314": {
      "op": "DUP2"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "offset": [
        314,
        340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCE"
    },
    "322": {
      "op": "JUMP"
    },
    "323": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "324": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "327": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151"
    },
    "330": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "331": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "333": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x81B"
    },
    "336": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        4949,
        5317
      ],
      "op": "JUMP",
      "path": "0"
    },
    "337": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "338": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35B"
    },
    "341": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        4949,
        5317
      ],
      "op": "JUMP",
      "path": "0"
    },
    "342": {
      "offset": [
        498,
        543
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "343": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "346": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "349": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "350": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "352": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x834"
    },
    "355": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        498,
        543
      ],
      "op": "JUMP",
      "path": "0"
    },
    "356": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "359": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "361": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "362": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "364": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "365": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "366": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "367": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "369": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "370": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "371": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "372": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "DUP2",
      "path": "0"
    },
    "373": {
      "fn": "TokenERC20.burn",
      "offset": [
        498,
        543
      ],
      "op": "JUMP",
      "path": "0"
    },
    "374": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "375": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "378": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x184"
    },
    "381": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "382": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "384": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B5"
    },
    "387": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        5570,
        6173
      ],
      "op": "JUMP",
      "path": "0"
    },
    "388": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "389": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F1"
    },
    "392": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        5570,
        6173
      ],
      "op": "JUMP",
      "path": "0"
    },
    "393": {
      "offset": [
        288,
        308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "394": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        288,
        308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC1"
    },
    "397": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        288,
        308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50B"
    },
    "400": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        288,
        308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "401": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "402": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "405": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19F"
    },
    "408": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "409": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "411": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B5"
    },
    "414": {
      "fn": "TokenERC20.transfer",
      "jump": "i",
      "offset": [
        2852,
        3001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "415": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "416": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x518"
    },
    "419": {
      "fn": "TokenERC20.transfer",
      "jump": "i",
      "offset": [
        2852,
        3001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "420": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "421": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA"
    },
    "424": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B2"
    },
    "427": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "428": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "430": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x865"
    },
    "433": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        4428,
        4783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "434": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "435": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52E"
    },
    "438": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        4428,
        4783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "439": {
      "offset": [
        549,
        615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "440": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "443": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C5"
    },
    "446": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "447": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "449": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x930"
    },
    "452": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        549,
        615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "453": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "454": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "456": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "458": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "459": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "460": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "461": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "463": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "464": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "DUP4",
      "path": "0"
    },
    "465": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "466": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "468": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "DUP1",
      "path": "0"
    },
    "469": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "DUP5",
      "path": "0"
    },
    "470": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "471": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "472": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "473": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "474": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "475": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "DUP3",
      "path": "0"
    },
    "476": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "477": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "478": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "479": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "480": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "481": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        549,
        615
      ],
      "op": "JUMP",
      "path": "0"
    },
    "482": {
      "offset": [
        264,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "483": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "485": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "486": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "487": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "490": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "491": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x963"
    },
    "494": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        264,
        282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "495": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "496": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "497": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "499": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ADD",
      "path": "0"
    },
    "500": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "502": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "503": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "504": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DIV",
      "path": "0"
    },
    "505": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "MUL",
      "path": "0"
    },
    "506": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "508": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ADD",
      "path": "0"
    },
    "509": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "511": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "512": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "513": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "514": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ADD",
      "path": "0"
    },
    "515": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "517": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "518": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "519": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "520": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "521": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "522": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "523": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "524": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "525": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "527": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ADD",
      "path": "0"
    },
    "528": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP3",
      "path": "0"
    },
    "529": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "530": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "531": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B"
    },
    "534": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "535": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x963"
    },
    "538": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        264,
        282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "539": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "540": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "541": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "542": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "545": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "546": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "547": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "549": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "LT",
      "path": "0"
    },
    "550": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23D"
    },
    "553": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "554": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "557": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "558": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP4",
      "path": "0"
    },
    "559": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "560": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DIV",
      "path": "0"
    },
    "561": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "MUL",
      "path": "0"
    },
    "562": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP4",
      "path": "0"
    },
    "563": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "564": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "565": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "567": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ADD",
      "path": "0"
    },
    "568": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "569": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x268"
    },
    "572": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "573": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "574": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP3",
      "path": "0"
    },
    "575": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ADD",
      "path": "0"
    },
    "576": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "577": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "578": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "580": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "581": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "583": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "585": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "586": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "587": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "589": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "590": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "591": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "592": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "593": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "595": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ADD",
      "path": "0"
    },
    "596": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "597": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "599": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ADD",
      "path": "0"
    },
    "600": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "601": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP4",
      "path": "0"
    },
    "602": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "GT",
      "path": "0"
    },
    "603": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "606": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "607": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP3",
      "path": "0"
    },
    "608": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "609": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SUB",
      "path": "0"
    },
    "610": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "612": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "AND",
      "path": "0"
    },
    "613": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP3",
      "path": "0"
    },
    "614": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "ADD",
      "path": "0"
    },
    "615": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "616": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "617": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "POP",
      "path": "0"
    },
    "618": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "POP",
      "path": "0"
    },
    "619": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "POP",
      "path": "0"
    },
    "620": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "POP",
      "path": "0"
    },
    "621": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "POP",
      "path": "0"
    },
    "622": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        264,
        282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "623": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "o",
      "offset": [
        264,
        282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "624": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "625": {
      "fn": "TokenERC20.approve",
      "offset": [
        3929,
        3939
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "626": {
      "fn": "TokenERC20.approve",
      "offset": [
        3895,
        3907
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "628": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP2",
      "path": "0"
    },
    "629": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP2",
      "path": "0"
    },
    "630": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "631": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "633": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "635": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "636": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP2",
      "path": "0"
    },
    "637": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "638": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "640": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP1",
      "path": "0"
    },
    "641": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "DUP4",
      "path": "0"
    },
    "642": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3940
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "649": {
      "op": "SHL"
    },
    "650": {
      "op": "SUB"
    },
    "651": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "DUP8",
      "path": "0"
    },
    "652": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "AND",
      "path": "0"
    },
    "653": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "DUP1",
      "path": "0"
    },
    "654": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "DUP6",
      "path": "0"
    },
    "655": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "656": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "657": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "658": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "DUP1",
      "path": "0"
    },
    "659": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "DUP4",
      "path": "0"
    },
    "660": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "661": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3959
      ],
      "op": "DUP6",
      "path": "0"
    },
    "662": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "663": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3959
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "664": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 1
    },
    "665": {
      "fn": "TokenERC20.approve",
      "offset": [
        3895,
        3907
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "666": {
      "fn": "TokenERC20.approve",
      "offset": [
        3895,
        3907
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "667": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "668": {
      "fn": "TokenERC20.approve",
      "offset": [
        3919,
        3950
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "669": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "702": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "703": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CB"
    },
    "706": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "707": {
      "fn": "TokenERC20.approve",
      "offset": [
        3953,
        3959
      ],
      "op": "DUP7",
      "path": "0"
    },
    "708": {
      "op": "DUP2"
    },
    "709": {
      "op": "MSTORE"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "op": "SWAP1"
    },
    "714": {
      "op": "JUMP"
    },
    "715": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "716": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "718": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "719": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "DUP1",
      "path": "0"
    },
    "720": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "721": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "SUB",
      "path": "0"
    },
    "722": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "723": {
      "fn": "TokenERC20.approve",
      "offset": [
        3974,
        4012
      ],
      "op": "LOG3",
      "path": "0"
    },
    "724": {
      "op": "POP"
    },
    "725": {
      "fn": "TokenERC20.approve",
      "offset": [
        4029,
        4033
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "727": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "728": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "729": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "POP",
      "path": "0"
    },
    "730": {
      "fn": "TokenERC20.approve",
      "offset": [
        3820,
        4040
      ],
      "op": "POP",
      "path": "0"
    },
    "731": {
      "fn": "TokenERC20.approve",
      "jump": "o",
      "offset": [
        3820,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "732": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "SUB"
    },
    "741": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 3
    },
    "742": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "AND",
      "path": "0"
    },
    "743": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3352,
        3364
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "745": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "746": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "DUP2",
      "path": "0"
    },
    "747": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "748": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3403
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "750": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "752": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "753": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "DUP2",
      "path": "0"
    },
    "754": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "755": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "757": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "DUP1",
      "path": "0"
    },
    "758": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "DUP4",
      "path": "0"
    },
    "759": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3410
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "760": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3411,
        3421
      ],
      "op": "CALLER",
      "path": "0"
    },
    "761": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3422
      ],
      "op": "DUP5",
      "path": "0"
    },
    "762": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3422
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "763": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3422
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "764": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3422
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "765": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3422
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "766": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3422
      ],
      "op": "DUP2",
      "path": "0"
    },
    "767": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3422
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "768": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3394,
        3422
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "769": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3384,
        3422
      ],
      "op": "DUP3",
      "path": "0"
    },
    "770": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3384,
        3422
      ],
      "op": "GT",
      "path": "0"
    },
    "771": {
      "branch": 30,
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3384,
        3422
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "772": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3376,
        3423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30C"
    },
    "775": {
      "branch": 30,
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3376,
        3423
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "776": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3376,
        3423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "778": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3376,
        3423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "779": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3376,
        3423
      ],
      "op": "REVERT",
      "path": "0"
    },
    "780": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3376,
        3423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "787": {
      "op": "SHL"
    },
    "788": {
      "op": "SUB"
    },
    "789": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 4
    },
    "790": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "AND",
      "path": "0"
    },
    "791": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "793": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "794": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "795": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "796": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3465
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "798": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "800": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "801": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "DUP2",
      "path": "0"
    },
    "802": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "803": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "805": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "806": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "DUP4",
      "path": "0"
    },
    "807": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "808": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3473,
        3483
      ],
      "op": "CALLER",
      "path": "0"
    },
    "809": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3484
      ],
      "op": "DUP5",
      "path": "0"
    },
    "810": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "811": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "812": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3484
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "813": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3484
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "814": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3484
      ],
      "op": "DUP2",
      "path": "0"
    },
    "815": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3484
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "816": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3494
      ],
      "op": "DUP1",
      "path": "0"
    },
    "817": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3494
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "818": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3488,
        3494
      ],
      "op": "DUP5",
      "path": "0"
    },
    "819": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3488,
        3494
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "820": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "821": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3494
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33F"
    },
    "824": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3494
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "825": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3488,
        3494
      ],
      "op": "DUP5",
      "path": "0"
    },
    "826": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3488,
        3494
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "827": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3494
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "830": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        3456,
        3494
      ],
      "op": "JUMP",
      "path": "0"
    },
    "831": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3494
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "832": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3494
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "833": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3494
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "834": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3456,
        3494
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3504,
        3533
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x350"
    },
    "839": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3504,
        3533
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "840": {
      "op": "POP"
    },
    "841": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3514,
        3519
      ],
      "op": "DUP5",
      "path": "0"
    },
    "842": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3521,
        3524
      ],
      "op": "DUP5",
      "path": "0"
    },
    "843": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3526,
        3532
      ],
      "op": "DUP5",
      "path": "0"
    },
    "844": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3504,
        3513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B6"
    },
    "847": {
      "fn": "TokenERC20.transferFrom",
      "jump": "i",
      "offset": [
        3504,
        3533
      ],
      "op": "JUMP",
      "path": "0"
    },
    "848": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3504,
        3533
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3550,
        3554
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "852": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "853": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "854": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "855": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "POP",
      "path": "0"
    },
    "856": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "POP",
      "path": "0"
    },
    "857": {
      "fn": "TokenERC20.transferFrom",
      "offset": [
        3270,
        3561
      ],
      "op": "POP",
      "path": "0"
    },
    "858": {
      "fn": "TokenERC20.transferFrom",
      "jump": "o",
      "offset": [
        3270,
        3561
      ],
      "op": "JUMP",
      "path": "0"
    },
    "859": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "860": {
      "fn": "TokenERC20.burn",
      "offset": [
        5037,
        5047
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 7
    },
    "861": {
      "fn": "TokenERC20.burn",
      "offset": [
        4995,
        5007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "863": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5048
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "864": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5048
      ],
      "op": "DUP2",
      "path": "0"
    },
    "865": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5048
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "866": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "868": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "870": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5048
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "871": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "873": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5048
      ],
      "op": "DUP2",
      "path": "0"
    },
    "874": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5048
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "875": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5048
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "876": {
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5058
      ],
      "op": "DUP3",
      "path": "0"
    },
    "877": {
      "op": "GT"
    },
    "878": {
      "branch": 31,
      "fn": "TokenERC20.burn",
      "offset": [
        5027,
        5058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "879": {
      "fn": "TokenERC20.burn",
      "offset": [
        5019,
        5059
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x377"
    },
    "882": {
      "branch": 31,
      "fn": "TokenERC20.burn",
      "offset": [
        5019,
        5059
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "883": {
      "fn": "TokenERC20.burn",
      "offset": [
        5019,
        5059
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "885": {
      "fn": "TokenERC20.burn",
      "offset": [
        5019,
        5059
      ],
      "op": "DUP1",
      "path": "0"
    },
    "886": {
      "fn": "TokenERC20.burn",
      "offset": [
        5019,
        5059
      ],
      "op": "REVERT",
      "path": "0"
    },
    "887": {
      "fn": "TokenERC20.burn",
      "offset": [
        5019,
        5059
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "888": {
      "fn": "TokenERC20.burn",
      "offset": [
        5115,
        5125
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "889": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "891": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "892": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "DUP2",
      "path": "0"
    },
    "893": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "894": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "896": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "898": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "899": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "901": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "DUP2",
      "path": "0"
    },
    "902": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "903": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "DUP1",
      "path": "0"
    },
    "904": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "905": {
      "fn": "TokenERC20.burn",
      "offset": [
        5130,
        5136
      ],
      "op": "DUP5",
      "path": "0"
    },
    "906": {
      "fn": "TokenERC20.burn",
      "offset": [
        5130,
        5136
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "907": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "908": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x396"
    },
    "911": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "912": {
      "fn": "TokenERC20.burn",
      "offset": [
        5130,
        5136
      ],
      "op": "DUP5",
      "path": "0"
    },
    "913": {
      "fn": "TokenERC20.burn",
      "offset": [
        5130,
        5136
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "914": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "917": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        5105,
        5136
      ],
      "op": "JUMP",
      "path": "0"
    },
    "918": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "919": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "920": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "POP",
      "path": "0"
    },
    "921": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "POP",
      "path": "0"
    },
    "922": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "DUP2",
      "path": "0"
    },
    "923": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "924": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "925": {
      "fn": "TokenERC20.burn",
      "offset": [
        5105,
        5136
      ],
      "op": "POP",
      "path": "0"
    },
    "926": {
      "fn": "TokenERC20.burn",
      "offset": [
        5200,
        5206
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 9
    },
    "927": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "929": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5196
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "931": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "DUP3",
      "path": "0"
    },
    "932": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "DUP3",
      "path": "0"
    },
    "933": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "934": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AF"
    },
    "937": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "938": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "939": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "942": {
      "fn": "TokenERC20.burn",
      "jump": "i",
      "offset": [
        5185,
        5206
      ],
      "op": "JUMP",
      "path": "0"
    },
    "943": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "944": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "945": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "946": {
      "fn": "TokenERC20.burn",
      "offset": [
        5185,
        5206
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "op": "POP"
    },
    "949": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x40"
    },
    "951": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "952": {
      "op": "DUP3"
    },
    "953": {
      "op": "DUP2"
    },
    "954": {
      "op": "MSTORE"
    },
    "955": {
      "fn": "TokenERC20.burn",
      "offset": [
        5270,
        5280
      ],
      "op": "CALLER",
      "path": "0"
    },
    "956": {
      "fn": "TokenERC20.burn",
      "offset": [
        5270,
        5280
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "957": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
    },
    "990": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "993": {
      "op": "ADD"
    },
    "994": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "996": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "997": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "DUP1",
      "path": "0"
    },
    "998": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "999": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "SUB",
      "path": "0"
    },
    "1000": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1001": {
      "fn": "TokenERC20.burn",
      "offset": [
        5265,
        5289
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1002": {
      "op": "POP"
    },
    "1003": {
      "fn": "TokenERC20.burn",
      "offset": [
        5306,
        5310
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "1005": {
      "fn": "TokenERC20.burn",
      "offset": [
        5306,
        5310
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1006": {
      "fn": "TokenERC20.burn",
      "offset": [
        4949,
        5317
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "TokenERC20.burn",
      "jump": "o",
      "offset": [
        4949,
        5317
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1009": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "SUB"
    },
    "1018": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 12
    },
    "1019": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "AND",
      "path": "0"
    },
    "1020": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5635,
        5647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1022": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1023": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1024": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1025": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1027": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1029": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1030": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1032": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1033": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1034": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5683
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1035": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5693
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1036": {
      "op": "GT"
    },
    "1037": {
      "branch": 32,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5667,
        5693
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1038": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5659,
        5694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x416"
    },
    "1041": {
      "branch": 32,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5659,
        5694
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1042": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5659,
        5694
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1044": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5659,
        5694
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1045": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5659,
        5694
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1046": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5659,
        5694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1053": {
      "op": "SHL"
    },
    "1054": {
      "op": "SUB"
    },
    "1055": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 13
    },
    "1056": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "AND",
      "path": "0"
    },
    "1057": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1059": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1060": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1061": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1062": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5789
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1064": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1066": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1067": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1068": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1069": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1071": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1072": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1073": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5796
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1074": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5797,
        5807
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1075": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5808
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1076": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1077": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1078": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5808
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1079": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1080": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1081": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5808
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1082": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5780,
        5808
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1083": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5770,
        5808
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1084": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5770,
        5808
      ],
      "op": "GT",
      "path": "0"
    },
    "1085": {
      "branch": 33,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5770,
        5808
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1086": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5762,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x446"
    },
    "1089": {
      "branch": 33,
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5762,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1090": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5762,
        5809
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1092": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5762,
        5809
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1093": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5762,
        5809
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1094": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5762,
        5809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1101": {
      "op": "SHL"
    },
    "1102": {
      "op": "SUB"
    },
    "1103": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1104": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "AND",
      "path": "0"
    },
    "1105": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1107": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1108": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1109": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1110": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1112": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1114": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1115": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1117": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1118": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1119": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5867
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1120": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5867
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1121": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5861,
        5867
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1122": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5861,
        5867
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1123": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5857
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1124": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46E"
    },
    "1127": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1128": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5861,
        5867
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1129": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5861,
        5867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1130": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5867
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "1133": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        5841,
        5867
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1134": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5867
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1135": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5867
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1136": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5867
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1137": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5841,
        5867
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1138": {
      "op": "POP"
    },
    "1139": {
      "op": "POP"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1146": {
      "op": "SHL"
    },
    "1147": {
      "op": "SUB"
    },
    "1148": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 15
    },
    "1149": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "AND",
      "path": "0"
    },
    "1150": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1152": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1153": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1154": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1155": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1157": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1159": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1160": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1161": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1162": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1164": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1165": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1166": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1167": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5956,
        5966
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1168": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5967
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1169": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5967
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1170": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5967
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1171": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5967
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1172": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5967
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1173": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5967
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1174": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5967
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1175": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1176": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1177": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5971,
        5977
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1178": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5971,
        5977
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1179": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1180": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "1183": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1184": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5971,
        5977
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1185": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5971,
        5977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1186": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "1189": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        5939,
        5977
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1190": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1192": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "POP",
      "path": "0"
    },
    "1193": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "POP",
      "path": "0"
    },
    "1194": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1195": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1196": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1197": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5939,
        5977
      ],
      "op": "POP",
      "path": "0"
    },
    "1198": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6054,
        6060
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 16
    },
    "1199": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1201": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6050
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1203": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1204": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1205": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1206": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BF"
    },
    "1209": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1210": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1211": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "1214": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        6039,
        6060
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1215": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1216": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1217": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1218": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6039,
        6060
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "op": "POP"
    },
    "1221": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x40"
    },
    "1223": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1224": {
      "op": "DUP3"
    },
    "1225": {
      "op": "DUP2"
    },
    "1226": {
      "op": "MSTORE"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1233": {
      "op": "SHL"
    },
    "1234": {
      "op": "SUB"
    },
    "1235": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1236": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "AND",
      "path": "0"
    },
    "1237": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1238": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
    },
    "1271": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1274": {
      "op": "ADD"
    },
    "1275": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1277": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1278": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1279": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1280": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "SUB",
      "path": "0"
    },
    "1281": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1282": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6126,
        6145
      ],
      "op": "LOG2",
      "path": "0"
    },
    "1283": {
      "op": "POP"
    },
    "1284": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        6162,
        6166
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1"
    },
    "1286": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1287": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1288": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "POP",
      "path": "0"
    },
    "1289": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        5570,
        6173
      ],
      "op": "POP",
      "path": "0"
    },
    "1290": {
      "fn": "TokenERC20.burnFrom",
      "jump": "o",
      "offset": [
        5570,
        6173
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1291": {
      "offset": [
        288,
        308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1292": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        288,
        308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1294": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        288,
        308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1295": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        288,
        308
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1296": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        288,
        308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EF"
    },
    "1299": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        288,
        308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1300": {
      "fn": "TokenERC20.burnFrom",
      "offset": [
        288,
        308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x963"
    },
    "1303": {
      "fn": "TokenERC20.burnFrom",
      "jump": "i",
      "offset": [
        288,
        308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1304": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1305": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2915,
        2927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1307": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2939,
        2973
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x525"
    },
    "1310": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2949,
        2959
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1311": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2961,
        2964
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1312": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2966,
        2972
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1313": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2939,
        2948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B6"
    },
    "1316": {
      "fn": "TokenERC20.transfer",
      "jump": "i",
      "offset": [
        2939,
        2973
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1317": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2939,
        2973
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1318": {
      "op": "POP"
    },
    "1319": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2990,
        2994
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x1"
    },
    "1321": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1322": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1323": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "POP",
      "path": "0"
    },
    "1324": {
      "fn": "TokenERC20.transfer",
      "offset": [
        2852,
        3001
      ],
      "op": "POP",
      "path": "0"
    },
    "1325": {
      "fn": "TokenERC20.transfer",
      "jump": "o",
      "offset": [
        2852,
        3001
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1326": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1327": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4543,
        4555
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1329": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4607,
        4615
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1330": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4630,
        4655
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53B"
    },
    "1333": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4607,
        4615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1334": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4648,
        4654
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1335": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4630,
        4637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270"
    },
    "1338": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        4630,
        4655
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1339": {
      "branch": 34,
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4630,
        4655
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1340": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4626,
        4777
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1341": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4626,
        4777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AE"
    },
    "1344": {
      "branch": 34,
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4626,
        4777
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1345": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x40"
    },
    "1347": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1348": {
      "op": "PUSH4",
      "value": "0x8F4FFCB1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1357": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "SHL"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4694
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1367": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4694
      ],
      "op": "AND",
      "path": "0"
    },
    "1368": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1369": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4694
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8F4FFCB1"
    },
    "1374": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1375": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x572"
    },
    "1378": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1379": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4695,
        4705
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1380": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4695,
        4705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1381": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4707,
        4713
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1382": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4707,
        4713
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1383": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4723,
        4727
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1384": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4723,
        4727
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1385": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4730,
        4740
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1386": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4730,
        4740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1387": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1389": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "ADD",
      "path": "0"
    },
    "1390": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CA"
    },
    "1393": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "i",
      "offset": [
        4671,
        4741
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1394": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1395": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1397": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1399": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1400": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1401": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1402": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "SUB",
      "path": "0"
    },
    "1403": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1404": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1406": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1407": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1408": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1409": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1410": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1411": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1412": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58C"
    },
    "1415": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1416": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1418": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1419": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1420": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1421": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "POP",
      "path": "0"
    },
    "1422": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "GAS",
      "path": "0"
    },
    "1423": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "CALL",
      "path": "0"
    },
    "1424": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1425": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1426": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1427": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A0"
    },
    "1430": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1431": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1432": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1434": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1435": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1436": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1437": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1439": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1440": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1441": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "POP",
      "path": "0"
    },
    "1442": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "POP",
      "path": "0"
    },
    "1443": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "POP",
      "path": "0"
    },
    "1444": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4671,
        4741
      ],
      "op": "POP",
      "path": "0"
    },
    "1445": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4762,
        4766
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x1"
    },
    "1447": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4755,
        4766
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1448": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4755,
        4766
      ],
      "op": "POP",
      "path": "0"
    },
    "1449": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4755,
        4766
      ],
      "op": "POP",
      "path": "0"
    },
    "1450": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4755,
        4766
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x354"
    },
    "1453": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4755,
        4766
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1454": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4626,
        4777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1455": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4557,
        4783
      ],
      "op": "POP",
      "path": "0"
    },
    "1456": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1457": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1458": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "POP",
      "path": "0"
    },
    "1459": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "POP",
      "path": "0"
    },
    "1460": {
      "fn": "TokenERC20.approveAndCall",
      "offset": [
        4428,
        4783
      ],
      "op": "POP",
      "path": "0"
    },
    "1461": {
      "fn": "TokenERC20.approveAndCall",
      "jump": "o",
      "offset": [
        4428,
        4783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1462": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1815,
        2651
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1469": {
      "op": "SHL"
    },
    "1470": {
      "op": "SUB"
    },
    "1471": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1965,
        1984
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 23
    },
    "1472": {
      "branch": 35,
      "fn": "TokenERC20._transfer",
      "offset": [
        1965,
        1984
      ],
      "op": "AND",
      "path": "0"
    },
    "1473": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1957,
        1985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C9"
    },
    "1476": {
      "branch": 35,
      "fn": "TokenERC20._transfer",
      "offset": [
        1957,
        1985
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1477": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1957,
        1985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1479": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1957,
        1985
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1480": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1957,
        1985
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1481": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1957,
        1985
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 24
    },
    "1491": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "AND",
      "path": "0"
    },
    "1492": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1494": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1495": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1496": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1497": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2054
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1499": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1501": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1502": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1504": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1505": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1506": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2061
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1507": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1508": {
      "op": "GT"
    },
    "1509": {
      "branch": 36,
      "fn": "TokenERC20._transfer",
      "offset": [
        2045,
        2071
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1510": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2037,
        2072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EE"
    },
    "1513": {
      "branch": 36,
      "fn": "TokenERC20._transfer",
      "offset": [
        2037,
        2072
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1514": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2037,
        2072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1516": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2037,
        2072
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1517": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2037,
        2072
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1518": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2037,
        2072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1525": {
      "op": "SHL"
    },
    "1526": {
      "op": "SUB"
    },
    "1527": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 25
    },
    "1528": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "AND",
      "path": "0"
    },
    "1529": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1531": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1532": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1533": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1534": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2157
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1536": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1538": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1539": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1541": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1542": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1543": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1544": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2121,
        2144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x611"
    },
    "1547": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2138,
        2144
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1548": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2148,
        2162
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1549": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2121,
        2144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA07"
    },
    "1552": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        2121,
        2144
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1553": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2121,
        2144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1554": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2121,
        2162
      ],
      "op": "LT",
      "path": "0"
    },
    "1555": {
      "branch": 37,
      "fn": "TokenERC20._transfer",
      "offset": [
        2121,
        2162
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1556": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2113,
        2163
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61C"
    },
    "1559": {
      "branch": 37,
      "fn": "TokenERC20._transfer",
      "offset": [
        2113,
        2163
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1560": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2113,
        2163
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1562": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2113,
        2163
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1563": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2113,
        2163
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1564": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2113,
        2163
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1571": {
      "op": "SHL"
    },
    "1572": {
      "op": "SUB"
    },
    "1573": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1574": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1575": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "AND",
      "path": "0"
    },
    "1576": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2225,
        2246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1578": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1579": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1580": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1581": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1583": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1585": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1586": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1588": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1589": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1590": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1591": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2268,
        2282
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1592": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2265
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1593": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2265
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1594": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2265
      ],
      "op": "AND",
      "path": "0"
    },
    "1595": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2265
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1596": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2265
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1597": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2265
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1598": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2265
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1599": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2265
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1600": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2225,
        2246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1601": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2225,
        2246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1602": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64A"
    },
    "1605": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2282
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1606": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA07"
    },
    "1609": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1610": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2249,
        2282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1617": {
      "op": "SHL"
    },
    "1618": {
      "op": "SUB"
    },
    "1619": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 26
    },
    "1620": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "AND",
      "path": "0"
    },
    "1621": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1623": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1624": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1625": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1626": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1628": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1630": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1631": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1633": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1634": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1635": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2354
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1636": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2354
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1637": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2225,
        2282
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1638": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2225,
        2282
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1639": {
      "op": "POP"
    },
    "1640": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2348,
        2354
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1641": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2348,
        2354
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1642": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1643": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1644": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2344
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1645": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x677"
    },
    "1648": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1649": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2348,
        2354
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1650": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2348,
        2354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1651": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2354
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "1654": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        2328,
        2354
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1655": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2354
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1656": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2354
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1657": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2354
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1658": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2328,
        2354
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1659": {
      "op": "POP"
    },
    "1660": {
      "op": "POP"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1667": {
      "op": "SHL"
    },
    "1668": {
      "op": "SUB"
    },
    "1669": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 27
    },
    "1670": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "AND",
      "path": "0"
    },
    "1671": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1673": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1674": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1675": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1676": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2414
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1678": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1680": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1681": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1683": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1684": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1685": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1686": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1687": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2423,
        2429
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1688": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2423,
        2429
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1689": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2419
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1690": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A4"
    },
    "1693": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1694": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2423,
        2429
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1695": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2423,
        2429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1696": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA07"
    },
    "1699": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        2405,
        2429
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1700": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1701": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1702": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "POP",
      "path": "0"
    },
    "1703": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "POP",
      "path": "0"
    },
    "1704": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1705": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1706": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1707": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2405,
        2429
      ],
      "op": "POP",
      "path": "0"
    },
    "1708": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2460,
        2463
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 28
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1715": {
      "op": "SHL"
    },
    "1716": {
      "op": "SUB"
    },
    "1717": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "AND",
      "path": "0"
    },
    "1718": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2453,
        2458
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1725": {
      "op": "SHL"
    },
    "1726": {
      "op": "SUB"
    },
    "1727": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "AND",
      "path": "0"
    },
    "1728": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1761": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2465,
        2471
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1762": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1764": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1765": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F0"
    },
    "1768": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1769": {
      "op": "DUP2"
    },
    "1770": {
      "op": "MSTORE"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1773": {
      "op": "ADD"
    },
    "1774": {
      "op": "SWAP1"
    },
    "1775": {
      "op": "JUMP"
    },
    "1776": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1777": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1779": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1780": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1781": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1782": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "SUB",
      "path": "0"
    },
    "1783": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1784": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2444,
        2472
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "op": "SUB"
    },
    "1793": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 29
    },
    "1794": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1795": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "AND",
      "path": "0"
    },
    "1796": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1798": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1799": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1800": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1801": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2618
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1803": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1805": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1806": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1808": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1809": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1810": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1811": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2609,
        2623
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1812": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2606
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1813": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2606
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1814": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2606
      ],
      "op": "AND",
      "path": "0"
    },
    "1815": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2606
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1816": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2606
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1817": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2606
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1818": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2606
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1819": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2606
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1820": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2627,
        2643
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1821": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2627,
        2643
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1822": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x726"
    },
    "1825": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2623
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1826": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA07"
    },
    "1829": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        2590,
        2623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1830": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1831": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2590,
        2643
      ],
      "op": "EQ",
      "path": "0"
    },
    "1832": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2583,
        2644
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x733"
    },
    "1835": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2583,
        2644
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1836": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2583,
        2644
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x733"
    },
    "1839": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2583,
        2644
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1F"
    },
    "1842": {
      "fn": "TokenERC20._transfer",
      "jump": "i",
      "offset": [
        2583,
        2644
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1843": {
      "fn": "TokenERC20._transfer",
      "offset": [
        2583,
        2644
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1844": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1884,
        2651
      ],
      "op": "POP",
      "path": "0"
    },
    "1845": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1815,
        2651
      ],
      "op": "POP",
      "path": "0"
    },
    "1846": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1815,
        2651
      ],
      "op": "POP",
      "path": "0"
    },
    "1847": {
      "fn": "TokenERC20._transfer",
      "offset": [
        1815,
        2651
      ],
      "op": "POP",
      "path": "0"
    },
    "1848": {
      "fn": "TokenERC20._transfer",
      "jump": "o",
      "offset": [
        1815,
        2651
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1849": {
      "op": "JUMPDEST"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1852": {
      "op": "DUP2"
    },
    "1853": {
      "op": "MLOAD"
    },
    "1854": {
      "op": "DUP1"
    },
    "1855": {
      "op": "DUP5"
    },
    "1856": {
      "op": "MSTORE"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1859": {
      "op": "JUMPDEST"
    },
    "1860": {
      "op": "DUP2"
    },
    "1861": {
      "op": "DUP2"
    },
    "1862": {
      "op": "LT"
    },
    "1863": {
      "op": "ISZERO"
    },
    "1864": {
      "op": "PUSH2",
      "value": "0x75F"
    },
    "1867": {
      "op": "JUMPI"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1870": {
      "op": "DUP2"
    },
    "1871": {
      "op": "DUP6"
    },
    "1872": {
      "op": "ADD"
    },
    "1873": {
      "op": "DUP2"
    },
    "1874": {
      "op": "ADD"
    },
    "1875": {
      "op": "MLOAD"
    },
    "1876": {
      "op": "DUP7"
    },
    "1877": {
      "op": "DUP4"
    },
    "1878": {
      "op": "ADD"
    },
    "1879": {
      "op": "DUP3"
    },
    "1880": {
      "op": "ADD"
    },
    "1881": {
      "op": "MSTORE"
    },
    "1882": {
      "op": "ADD"
    },
    "1883": {
      "op": "PUSH2",
      "value": "0x743"
    },
    "1886": {
      "op": "JUMP"
    },
    "1887": {
      "op": "JUMPDEST"
    },
    "1888": {
      "op": "DUP2"
    },
    "1889": {
      "op": "DUP2"
    },
    "1890": {
      "op": "GT"
    },
    "1891": {
      "op": "ISZERO"
    },
    "1892": {
      "op": "PUSH2",
      "value": "0x771"
    },
    "1895": {
      "op": "JUMPI"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1900": {
      "op": "DUP4"
    },
    "1901": {
      "op": "DUP8"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "op": "ADD"
    },
    "1904": {
      "op": "MSTORE"
    },
    "1905": {
      "op": "JUMPDEST"
    },
    "1906": {
      "op": "POP"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1909": {
      "op": "ADD"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1912": {
      "op": "NOT"
    },
    "1913": {
      "op": "AND"
    },
    "1914": {
      "op": "SWAP3"
    },
    "1915": {
      "op": "SWAP1"
    },
    "1916": {
      "op": "SWAP3"
    },
    "1917": {
      "op": "ADD"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1920": {
      "op": "ADD"
    },
    "1921": {
      "op": "SWAP3"
    },
    "1922": {
      "op": "SWAP2"
    },
    "1923": {
      "op": "POP"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "jump": "o",
      "op": "JUMP"
    },
    "1926": {
      "op": "JUMPDEST"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1929": {
      "op": "DUP2"
    },
    "1930": {
      "op": "MSTORE"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1933": {
      "op": "PUSH2",
      "value": "0x354"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1938": {
      "op": "DUP4"
    },
    "1939": {
      "op": "ADD"
    },
    "1940": {
      "op": "DUP5"
    },
    "1941": {
      "op": "PUSH2",
      "value": "0x739"
    },
    "1944": {
      "jump": "i",
      "op": "JUMP"
    },
    "1945": {
      "op": "JUMPDEST"
    },
    "1946": {
      "op": "DUP1"
    },
    "1947": {
      "op": "CALLDATALOAD"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1954": {
      "op": "SHL"
    },
    "1955": {
      "op": "SUB"
    },
    "1956": {
      "op": "DUP2"
    },
    "1957": {
      "op": "AND"
    },
    "1958": {
      "op": "DUP2"
    },
    "1959": {
      "op": "EQ"
    },
    "1960": {
      "op": "PUSH2",
      "value": "0x7B0"
    },
    "1963": {
      "op": "JUMPI"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1966": {
      "op": "DUP1"
    },
    "1967": {
      "op": "REVERT"
    },
    "1968": {
      "op": "JUMPDEST"
    },
    "1969": {
      "op": "SWAP2"
    },
    "1970": {
      "op": "SWAP1"
    },
    "1971": {
      "op": "POP"
    },
    "1972": {
      "jump": "o",
      "op": "JUMP"
    },
    "1973": {
      "op": "JUMPDEST"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1976": {
      "op": "DUP1"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1979": {
      "op": "DUP4"
    },
    "1980": {
      "op": "DUP6"
    },
    "1981": {
      "op": "SUB"
    },
    "1982": {
      "op": "SLT"
    },
    "1983": {
      "op": "ISZERO"
    },
    "1984": {
      "op": "PUSH2",
      "value": "0x7C8"
    },
    "1987": {
      "op": "JUMPI"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1990": {
      "op": "DUP1"
    },
    "1991": {
      "op": "REVERT"
    },
    "1992": {
      "op": "JUMPDEST"
    },
    "1993": {
      "op": "PUSH2",
      "value": "0x7D1"
    },
    "1996": {
      "op": "DUP4"
    },
    "1997": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "2000": {
      "jump": "i",
      "op": "JUMP"
    },
    "2001": {
      "op": "JUMPDEST"
    },
    "2002": {
      "op": "SWAP5"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2005": {
      "op": "SWAP4"
    },
    "2006": {
      "op": "SWAP1"
    },
    "2007": {
      "op": "SWAP4"
    },
    "2008": {
      "op": "ADD"
    },
    "2009": {
      "op": "CALLDATALOAD"
    },
    "2010": {
      "op": "SWAP4"
    },
    "2011": {
      "op": "POP"
    },
    "2012": {
      "op": "POP"
    },
    "2013": {
      "op": "POP"
    },
    "2014": {
      "jump": "o",
      "op": "JUMP"
    },
    "2015": {
      "op": "JUMPDEST"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2018": {
      "op": "DUP1"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2023": {
      "op": "DUP5"
    },
    "2024": {
      "op": "DUP7"
    },
    "2025": {
      "op": "SUB"
    },
    "2026": {
      "op": "SLT"
    },
    "2027": {
      "op": "ISZERO"
    },
    "2028": {
      "op": "PUSH2",
      "value": "0x7F4"
    },
    "2031": {
      "op": "JUMPI"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2034": {
      "op": "DUP1"
    },
    "2035": {
      "op": "REVERT"
    },
    "2036": {
      "op": "JUMPDEST"
    },
    "2037": {
      "op": "PUSH2",
      "value": "0x7FD"
    },
    "2040": {
      "op": "DUP5"
    },
    "2041": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "2044": {
      "jump": "i",
      "op": "JUMP"
    },
    "2045": {
      "op": "JUMPDEST"
    },
    "2046": {
      "op": "SWAP3"
    },
    "2047": {
      "op": "POP"
    },
    "2048": {
      "op": "PUSH2",
      "value": "0x80B"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2053": {
      "op": "DUP6"
    },
    "2054": {
      "op": "ADD"
    },
    "2055": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "2058": {
      "jump": "i",
      "op": "JUMP"
    },
    "2059": {
      "op": "JUMPDEST"
    },
    "2060": {
      "op": "SWAP2"
    },
    "2061": {
      "op": "POP"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2064": {
      "op": "DUP5"
    },
    "2065": {
      "op": "ADD"
    },
    "2066": {
      "op": "CALLDATALOAD"
    },
    "2067": {
      "op": "SWAP1"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "op": "SWAP3"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "op": "SWAP3"
    },
    "2072": {
      "op": "POP"
    },
    "2073": {
      "op": "SWAP3"
    },
    "2074": {
      "jump": "o",
      "op": "JUMP"
    },
    "2075": {
      "op": "JUMPDEST"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2080": {
      "op": "DUP3"
    },
    "2081": {
      "op": "DUP5"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "op": "SLT"
    },
    "2084": {
      "op": "ISZERO"
    },
    "2085": {
      "op": "PUSH2",
      "value": "0x82D"
    },
    "2088": {
      "op": "JUMPI"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2091": {
      "op": "DUP1"
    },
    "2092": {
      "op": "REVERT"
    },
    "2093": {
      "op": "JUMPDEST"
    },
    "2094": {
      "op": "POP"
    },
    "2095": {
      "op": "CALLDATALOAD"
    },
    "2096": {
      "op": "SWAP2"
    },
    "2097": {
      "op": "SWAP1"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "jump": "o",
      "op": "JUMP"
    },
    "2100": {
      "op": "JUMPDEST"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2105": {
      "op": "DUP3"
    },
    "2106": {
      "op": "DUP5"
    },
    "2107": {
      "op": "SUB"
    },
    "2108": {
      "op": "SLT"
    },
    "2109": {
      "op": "ISZERO"
    },
    "2110": {
      "op": "PUSH2",
      "value": "0x846"
    },
    "2113": {
      "op": "JUMPI"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2116": {
      "op": "DUP1"
    },
    "2117": {
      "op": "REVERT"
    },
    "2118": {
      "op": "JUMPDEST"
    },
    "2119": {
      "op": "PUSH2",
      "value": "0x354"
    },
    "2122": {
      "op": "DUP3"
    },
    "2123": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "2126": {
      "jump": "i",
      "op": "JUMP"
    },
    "2127": {
      "op": "JUMPDEST"
    },
    "2128": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2135": {
      "op": "SHL"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2138": {
      "op": "MSTORE"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2143": {
      "op": "MSTORE"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2148": {
      "op": "REVERT"
    },
    "2149": {
      "op": "JUMPDEST"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2152": {
      "op": "DUP1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2157": {
      "op": "DUP5"
    },
    "2158": {
      "op": "DUP7"
    },
    "2159": {
      "op": "SUB"
    },
    "2160": {
      "op": "SLT"
    },
    "2161": {
      "op": "ISZERO"
    },
    "2162": {
      "op": "PUSH2",
      "value": "0x87A"
    },
    "2165": {
      "op": "JUMPI"
    },
    "2166": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2168": {
      "op": "DUP1"
    },
    "2169": {
      "op": "REVERT"
    },
    "2170": {
      "op": "JUMPDEST"
    },
    "2171": {
      "op": "PUSH2",
      "value": "0x883"
    },
    "2174": {
      "op": "DUP5"
    },
    "2175": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "2178": {
      "jump": "i",
      "op": "JUMP"
    },
    "2179": {
      "op": "JUMPDEST"
    },
    "2180": {
      "op": "SWAP3"
    },
    "2181": {
      "op": "POP"
    },
    "2182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2184": {
      "op": "DUP5"
    },
    "2185": {
      "op": "ADD"
    },
    "2186": {
      "op": "CALLDATALOAD"
    },
    "2187": {
      "op": "SWAP2"
    },
    "2188": {
      "op": "POP"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2191": {
      "op": "DUP5"
    },
    "2192": {
      "op": "ADD"
    },
    "2193": {
      "op": "CALLDATALOAD"
    },
    "2194": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2203": {
      "op": "DUP1"
    },
    "2204": {
      "op": "DUP3"
    },
    "2205": {
      "op": "GT"
    },
    "2206": {
      "op": "ISZERO"
    },
    "2207": {
      "op": "PUSH2",
      "value": "0x8A7"
    },
    "2210": {
      "op": "JUMPI"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2213": {
      "op": "DUP1"
    },
    "2214": {
      "op": "REVERT"
    },
    "2215": {
      "op": "JUMPDEST"
    },
    "2216": {
      "op": "DUP2"
    },
    "2217": {
      "op": "DUP7"
    },
    "2218": {
      "op": "ADD"
    },
    "2219": {
      "op": "SWAP2"
    },
    "2220": {
      "op": "POP"
    },
    "2221": {
      "op": "DUP7"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2224": {
      "op": "DUP4"
    },
    "2225": {
      "op": "ADD"
    },
    "2226": {
      "op": "SLT"
    },
    "2227": {
      "op": "PUSH2",
      "value": "0x8BB"
    },
    "2230": {
      "op": "JUMPI"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2233": {
      "op": "DUP1"
    },
    "2234": {
      "op": "REVERT"
    },
    "2235": {
      "op": "JUMPDEST"
    },
    "2236": {
      "op": "DUP2"
    },
    "2237": {
      "op": "CALLDATALOAD"
    },
    "2238": {
      "op": "DUP2"
    },
    "2239": {
      "op": "DUP2"
    },
    "2240": {
      "op": "GT"
    },
    "2241": {
      "op": "ISZERO"
    },
    "2242": {
      "op": "PUSH2",
      "value": "0x8CD"
    },
    "2245": {
      "op": "JUMPI"
    },
    "2246": {
      "op": "PUSH2",
      "value": "0x8CD"
    },
    "2249": {
      "op": "PUSH2",
      "value": "0x84F"
    },
    "2252": {
      "jump": "i",
      "op": "JUMP"
    },
    "2253": {
      "op": "JUMPDEST"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2256": {
      "op": "MLOAD"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2259": {
      "op": "DUP3"
    },
    "2260": {
      "op": "ADD"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2263": {
      "op": "NOT"
    },
    "2264": {
      "op": "SWAP1"
    },
    "2265": {
      "op": "DUP2"
    },
    "2266": {
      "op": "AND"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2269": {
      "op": "ADD"
    },
    "2270": {
      "op": "AND"
    },
    "2271": {
      "op": "DUP2"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "op": "SWAP1"
    },
    "2274": {
      "op": "DUP4"
    },
    "2275": {
      "op": "DUP3"
    },
    "2276": {
      "op": "GT"
    },
    "2277": {
      "op": "DUP2"
    },
    "2278": {
      "op": "DUP4"
    },
    "2279": {
      "op": "LT"
    },
    "2280": {
      "op": "OR"
    },
    "2281": {
      "op": "ISZERO"
    },
    "2282": {
      "op": "PUSH2",
      "value": "0x8F5"
    },
    "2285": {
      "op": "JUMPI"
    },
    "2286": {
      "op": "PUSH2",
      "value": "0x8F5"
    },
    "2289": {
      "op": "PUSH2",
      "value": "0x84F"
    },
    "2292": {
      "jump": "i",
      "op": "JUMP"
    },
    "2293": {
      "op": "JUMPDEST"
    },
    "2294": {
      "op": "DUP2"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2297": {
      "op": "MSTORE"
    },
    "2298": {
      "op": "DUP3"
    },
    "2299": {
      "op": "DUP2"
    },
    "2300": {
      "op": "MSTORE"
    },
    "2301": {
      "op": "DUP10"
    },
    "2302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2304": {
      "op": "DUP5"
    },
    "2305": {
      "op": "DUP8"
    },
    "2306": {
      "op": "ADD"
    },
    "2307": {
      "op": "ADD"
    },
    "2308": {
      "op": "GT"
    },
    "2309": {
      "op": "ISZERO"
    },
    "2310": {
      "op": "PUSH2",
      "value": "0x90E"
    },
    "2313": {
      "op": "JUMPI"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2316": {
      "op": "DUP1"
    },
    "2317": {
      "op": "REVERT"
    },
    "2318": {
      "op": "JUMPDEST"
    },
    "2319": {
      "op": "DUP3"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2322": {
      "op": "DUP7"
    },
    "2323": {
      "op": "ADD"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2326": {
      "op": "DUP4"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "op": "CALLDATACOPY"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2333": {
      "op": "DUP5"
    },
    "2334": {
      "op": "DUP4"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "DUP1"
    },
    "2339": {
      "op": "SWAP6"
    },
    "2340": {
      "op": "POP"
    },
    "2341": {
      "op": "POP"
    },
    "2342": {
      "op": "POP"
    },
    "2343": {
      "op": "POP"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "op": "SWAP3"
    },
    "2347": {
      "op": "POP"
    },
    "2348": {
      "op": "SWAP3"
    },
    "2349": {
      "op": "POP"
    },
    "2350": {
      "op": "SWAP3"
    },
    "2351": {
      "jump": "o",
      "op": "JUMP"
    },
    "2352": {
      "op": "JUMPDEST"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2355": {
      "op": "DUP1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2358": {
      "op": "DUP4"
    },
    "2359": {
      "op": "DUP6"
    },
    "2360": {
      "op": "SUB"
    },
    "2361": {
      "op": "SLT"
    },
    "2362": {
      "op": "ISZERO"
    },
    "2363": {
      "op": "PUSH2",
      "value": "0x943"
    },
    "2366": {
      "op": "JUMPI"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2369": {
      "op": "DUP1"
    },
    "2370": {
      "op": "REVERT"
    },
    "2371": {
      "op": "JUMPDEST"
    },
    "2372": {
      "op": "PUSH2",
      "value": "0x94C"
    },
    "2375": {
      "op": "DUP4"
    },
    "2376": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "2379": {
      "jump": "i",
      "op": "JUMP"
    },
    "2380": {
      "op": "JUMPDEST"
    },
    "2381": {
      "op": "SWAP2"
    },
    "2382": {
      "op": "POP"
    },
    "2383": {
      "op": "PUSH2",
      "value": "0x95A"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2388": {
      "op": "DUP5"
    },
    "2389": {
      "op": "ADD"
    },
    "2390": {
      "op": "PUSH2",
      "value": "0x799"
    },
    "2393": {
      "jump": "i",
      "op": "JUMP"
    },
    "2394": {
      "op": "JUMPDEST"
    },
    "2395": {
      "op": "SWAP1"
    },
    "2396": {
      "op": "POP"
    },
    "2397": {
      "op": "SWAP3"
    },
    "2398": {
      "op": "POP"
    },
    "2399": {
      "op": "SWAP3"
    },
    "2400": {
      "op": "SWAP1"
    },
    "2401": {
      "op": "POP"
    },
    "2402": {
      "jump": "o",
      "op": "JUMP"
    },
    "2403": {
      "op": "JUMPDEST"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2406": {
      "op": "DUP2"
    },
    "2407": {
      "op": "DUP2"
    },
    "2408": {
      "op": "SHR"
    },
    "2409": {
      "op": "SWAP1"
    },
    "2410": {
      "op": "DUP3"
    },
    "2411": {
      "op": "AND"
    },
    "2412": {
      "op": "DUP1"
    },
    "2413": {
      "op": "PUSH2",
      "value": "0x977"
    },
    "2416": {
      "op": "JUMPI"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2419": {
      "op": "DUP3"
    },
    "2420": {
      "op": "AND"
    },
    "2421": {
      "op": "SWAP2"
    },
    "2422": {
      "op": "POP"
    },
    "2423": {
      "op": "JUMPDEST"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2426": {
      "op": "DUP3"
    },
    "2427": {
      "op": "LT"
    },
    "2428": {
      "op": "DUP2"
    },
    "2429": {
      "op": "SUB"
    },
    "2430": {
      "op": "PUSH2",
      "value": "0x997"
    },
    "2433": {
      "op": "JUMPI"
    },
    "2434": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2441": {
      "op": "SHL"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2444": {
      "op": "MSTORE"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2449": {
      "op": "MSTORE"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2454": {
      "op": "REVERT"
    },
    "2455": {
      "op": "JUMPDEST"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "op": "SWAP2"
    },
    "2458": {
      "op": "SWAP1"
    },
    "2459": {
      "op": "POP"
    },
    "2460": {
      "jump": "o",
      "op": "JUMP"
    },
    "2461": {
      "op": "JUMPDEST"
    },
    "2462": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2469": {
      "op": "SHL"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2477": {
      "op": "MSTORE"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2482": {
      "op": "REVERT"
    },
    "2483": {
      "op": "JUMPDEST"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2486": {
      "op": "DUP3"
    },
    "2487": {
      "op": "DUP3"
    },
    "2488": {
      "op": "LT"
    },
    "2489": {
      "op": "ISZERO"
    },
    "2490": {
      "op": "PUSH2",
      "value": "0x9C5"
    },
    "2493": {
      "op": "JUMPI"
    },
    "2494": {
      "op": "PUSH2",
      "value": "0x9C5"
    },
    "2497": {
      "op": "PUSH2",
      "value": "0x99D"
    },
    "2500": {
      "jump": "i",
      "op": "JUMP"
    },
    "2501": {
      "op": "JUMPDEST"
    },
    "2502": {
      "op": "POP"
    },
    "2503": {
      "op": "SUB"
    },
    "2504": {
      "op": "SWAP1"
    },
    "2505": {
      "jump": "o",
      "op": "JUMP"
    },
    "2506": {
      "op": "JUMPDEST"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2513": {
      "op": "SHL"
    },
    "2514": {
      "op": "SUB"
    },
    "2515": {
      "op": "DUP6"
    },
    "2516": {
      "op": "DUP2"
    },
    "2517": {
      "op": "AND"
    },
    "2518": {
      "op": "DUP3"
    },
    "2519": {
      "op": "MSTORE"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2522": {
      "op": "DUP3"
    },
    "2523": {
      "op": "ADD"
    },
    "2524": {
      "op": "DUP6"
    },
    "2525": {
      "op": "SWAP1"
    },
    "2526": {
      "op": "MSTORE"
    },
    "2527": {
      "op": "DUP4"
    },
    "2528": {
      "op": "AND"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2531": {
      "op": "DUP3"
    },
    "2532": {
      "op": "ADD"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2538": {
      "op": "DUP3"
    },
    "2539": {
      "op": "ADD"
    },
    "2540": {
      "op": "DUP2"
    },
    "2541": {
      "op": "SWAP1"
    },
    "2542": {
      "op": "MSTORE"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2545": {
      "op": "SWAP1"
    },
    "2546": {
      "op": "PUSH2",
      "value": "0x9FD"
    },
    "2549": {
      "op": "SWAP1"
    },
    "2550": {
      "op": "DUP4"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "DUP5"
    },
    "2553": {
      "op": "PUSH2",
      "value": "0x739"
    },
    "2556": {
      "jump": "i",
      "op": "JUMP"
    },
    "2557": {
      "op": "JUMPDEST"
    },
    "2558": {
      "op": "SWAP7"
    },
    "2559": {
      "op": "SWAP6"
    },
    "2560": {
      "op": "POP"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "op": "POP"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "op": "POP"
    },
    "2565": {
      "op": "POP"
    },
    "2566": {
      "jump": "o",
      "op": "JUMP"
    },
    "2567": {
      "op": "JUMPDEST"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2570": {
      "op": "DUP3"
    },
    "2571": {
      "op": "NOT"
    },
    "2572": {
      "op": "DUP3"
    },
    "2573": {
      "op": "GT"
    },
    "2574": {
      "op": "ISZERO"
    },
    "2575": {
      "op": "PUSH2",
      "value": "0xA1A"
    },
    "2578": {
      "op": "JUMPI"
    },
    "2579": {
      "op": "PUSH2",
      "value": "0xA1A"
    },
    "2582": {
      "op": "PUSH2",
      "value": "0x99D"
    },
    "2585": {
      "jump": "i",
      "op": "JUMP"
    },
    "2586": {
      "op": "JUMPDEST"
    },
    "2587": {
      "op": "POP"
    },
    "2588": {
      "op": "ADD"
    },
    "2589": {
      "op": "SWAP1"
    },
    "2590": {
      "jump": "o",
      "op": "JUMP"
    },
    "2591": {
      "op": "JUMPDEST"
    },
    "2592": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2599": {
      "op": "SHL"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2602": {
      "op": "MSTORE"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2607": {
      "op": "MSTORE"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2612": {
      "op": "REVERT"
    }
  },
  "sha1": "017ee5bf51752e031fc7bc0c56bd16379d73bfd6",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\ninterface tokenRecipient { \n    function receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData) external; \n}\n\ncontract TokenERC20 {\n    // Public variables of the token\n    string public name;\n    string public symbol;\n    uint8 public decimals = 18;\n    // 18 decimals is the strongly suggested default, avoid changing it\n    uint256 public totalSupply;\n\n    // This creates an array with all balances\n    mapping (address => uint256) public balanceOf;\n    mapping (address => mapping (address => uint256)) public allowance;\n\n    // This generates a public event on the blockchain that will notify clients\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    \n    // This generates a public event on the blockchain that will notify clients\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n\n    // This notifies clients about the amount burnt\n    event Burn(address indexed from, uint256 value);\n\n    /**\n     * Constructor function\n     *\n     * Initializes contract with initial supply tokens to the creator of the contract\n     */\n    constructor(\n        uint256 initialSupply,\n        string memory tokenName,\n        string memory tokenSymbol\n    ) public {\n        totalSupply = initialSupply * 10 ** uint256(decimals);  // Update total supply with the decimal amount\n        balanceOf[msg.sender] = totalSupply;                // Give the creator all initial tokens\n        name = tokenName;                                   // Set the name for display purposes\n        symbol = tokenSymbol;                               // Set the symbol for display purposes\n    }\n\n    /**\n     * Internal transfer, only can be called by this contract\n     */\n    function _transfer(address _from, address _to, uint _value) internal {\n        // Prevent transfer to 0x0 address. Use burn() instead\n        require(_to != address(0x0));\n        // Check if the sender has enough\n        require(balanceOf[_from] >= _value);\n        // Check for overflows\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\n        // Save this for an assertion in the future\n        uint previousBalances = balanceOf[_from] + balanceOf[_to];\n        // Subtract from the sender\n        balanceOf[_from] -= _value;\n        // Add the same to the recipient\n        balanceOf[_to] += _value;\n        emit Transfer(_from, _to, _value);\n        // Asserts are used to use static analysis to find bugs in your code. They should never fail\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\n    }\n\n    /**\n     * Transfer tokens\n     *\n     * Send `_value` tokens to `_to` from your account\n     *\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transfer(address _to, uint256 _value) public returns (bool success) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n     * Transfer tokens from other address\n     *\n     * Send `_value` tokens to `_to` on behalf of `_from`\n     *\n     * @param _from The address of the sender\n     * @param _to The address of the recipient\n     * @param _value the amount to send\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {\n        require(_value <= allowance[_from][msg.sender]);     // Check allowance\n        allowance[_from][msg.sender] -= _value;\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * Set allowance for other address\n     *\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     */\n    function approve(address _spender, uint256 _value) public\n        returns (bool success) {\n        allowance[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * Set allowance for other address and notify\n     *\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\n     *\n     * @param _spender The address authorized to spend\n     * @param _value the max amount they can spend\n     * @param _extraData some extra information to send to the approved contract\n     */\n    function approveAndCall(address _spender, uint256 _value, bytes memory _extraData)\n        public\n        returns (bool success) {\n        tokenRecipient spender = tokenRecipient(_spender);\n        if (approve(_spender, _value)) {\n            spender.receiveApproval(msg.sender, _value, address(this), _extraData);\n            return true;\n        }\n    }\n\n    /**\n     * Destroy tokens\n     *\n     * Remove `_value` tokens from the system irreversibly\n     *\n     * @param _value the amount of money to burn\n     */\n    function burn(uint256 _value) public returns (bool success) {\n        require(balanceOf[msg.sender] >= _value);   // Check if the sender has enough\n        balanceOf[msg.sender] -= _value;            // Subtract from the sender\n        totalSupply -= _value;                      // Updates totalSupply\n        emit Burn(msg.sender, _value);\n        return true;\n    }\n\n    /**\n     * Destroy tokens from other account\n     *\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n     *\n     * @param _from the address of the sender\n     * @param _value the amount of money to burn\n     */\n    function burnFrom(address _from, uint256 _value) public returns (bool success) {\n        require(balanceOf[_from] >= _value);                // Check if the targeted balance is enough\n        require(_value <= allowance[_from][msg.sender]);    // Check allowance\n        balanceOf[_from] -= _value;                         // Subtract from the targeted balance\n        allowance[_from][msg.sender] -= _value;             // Subtract from the sender's allowance\n        totalSupply -= _value;                              // Update totalSupply\n        emit Burn(_from, _value);\n        return true;\n    }\n}",
  "sourceMap": "201:5974:0:-:0;;;314:26;;;-1:-1:-1;;314:26:0;338:2;314:26;;;1194:537;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1372:8;;1358:23;;1372:8;;1358:2;:23;:::i;:::-;1342:39;;:13;:39;:::i;:::-;1328:11;:53;;;1449:10;1439:21;;;;:9;:21;;;;;:35;;;;1538:16;1545:9;1439:21;1538:16;:::i;:::-;-1:-1:-1;1635:6:0;:20;1644:11;1635:6;:20;:::i;:::-;;1194:537;;;201:5974;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:1:o;1036:623::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1252:16;;1312:2;1297:18;;1291:25;1252:16;;-1:-1:-1;;;;;;1365:14:1;;;1362:34;;;1392:1;1389;1382:12;1362:34;1415:61;1468:7;1459:6;1448:9;1444:22;1415:61;:::i;:::-;1405:71;;1522:2;1511:9;1507:18;1501:25;1485:41;;1551:2;1541:8;1538:16;1535:36;;;1567:1;1564;1557:12;1535:36;;1590:63;1645:7;1634:8;1623:9;1619:24;1590:63;:::i;:::-;1580:73;;;1036:623;;;;;:::o;1664:127::-;1725:10;1720:3;1716:20;1713:1;1706:31;1756:4;1753:1;1746:15;1780:4;1777:1;1770:15;1796:422;1885:1;1928:5;1885:1;1942:270;1963:7;1953:8;1950:21;1942:270;;;2022:4;2018:1;2014:6;2010:17;2004:4;2001:27;1998:53;;;2031:18;;:::i;:::-;2081:7;2071:8;2067:22;2064:55;;;2101:16;;;;2064:55;2180:22;;;;2140:15;;;;1942:270;;;1946:3;1796:422;;;;;:::o;2223:806::-;2272:5;2302:8;2292:80;;-1:-1:-1;2343:1:1;2357:5;;2292:80;2391:4;2381:76;;-1:-1:-1;2428:1:1;2442:5;;2381:76;2473:4;2491:1;2486:59;;;;2559:1;2554:130;;;;2466:218;;2486:59;2516:1;2507:10;;2530:5;;;2554:130;2591:3;2581:8;2578:17;2575:43;;;2598:18;;:::i;:::-;-1:-1:-1;;2654:1:1;2640:16;;2669:5;;2466:218;;2768:2;2758:8;2755:16;2749:3;2743:4;2740:13;2736:36;2730:2;2720:8;2717:16;2712:2;2706:4;2703:12;2699:35;2696:77;2693:159;;;-1:-1:-1;2805:19:1;;;2837:5;;2693:159;2884:34;2909:8;2903:4;2884:34;:::i;:::-;2954:6;2950:1;2946:6;2942:19;2933:7;2930:32;2927:58;;;2965:18;;:::i;:::-;3003:20;;-1:-1:-1;2223:806:1;;;;;:::o;3034:131::-;3094:5;3123:36;3150:8;3144:4;3123:36;:::i;:::-;3114:45;3034:131;-1:-1:-1;;;3034:131:1:o;3170:168::-;3210:7;3276:1;3272;3268:6;3264:14;3261:1;3258:21;3253:1;3246:9;3239:17;3235:45;3232:71;;;3283:18;;:::i;:::-;-1:-1:-1;3323:9:1;;3170:168::o;3343:380::-;3422:1;3418:12;;;;3465;;;3486:61;;3540:4;3532:6;3528:17;3518:27;;3486:61;3593:2;3585:6;3582:14;3562:18;3559:38;3556:161;;3639:10;3634:3;3630:20;3627:1;3620:31;3674:4;3671:1;3664:15;3702:4;3699:1;3692:15;3556:161;;3343:380;;;:::o;3854:545::-;3956:2;3951:3;3948:11;3945:448;;;3992:1;4017:5;4013:2;4006:17;4062:4;4058:2;4048:19;4132:2;4120:10;4116:19;4113:1;4109:27;4103:4;4099:38;4168:4;4156:10;4153:20;4150:47;;;-1:-1:-1;4191:4:1;4150:47;4246:2;4241:3;4237:12;4234:1;4230:20;4224:4;4220:31;4210:41;;4301:82;4319:2;4312:5;4309:13;4301:82;;;4364:17;;;4345:1;4334:13;4301:82;;;4305:3;;;3945:448;3854:545;;;:::o;4575:1352::-;4695:10;;-1:-1:-1;;;;;4717:30:1;;4714:56;;;4750:18;;:::i;:::-;4779:97;4869:6;4829:38;4861:4;4855:11;4829:38;:::i;:::-;4823:4;4779:97;:::i;:::-;4931:4;;4995:2;4984:14;;5012:1;5007:663;;;;5714:1;5731:6;5728:89;;;-1:-1:-1;5783:19:1;;;5777:26;5728:89;-1:-1:-1;;4532:1:1;4528:11;;;4524:24;4520:29;4510:40;4556:1;4552:11;;;4507:57;5830:81;;4977:944;;5007:663;3801:1;3794:14;;;3838:4;3825:18;;-1:-1:-1;;5043:20:1;;;5161:236;5175:7;5172:1;5169:14;5161:236;;;5264:19;;;5258:26;5243:42;;5356:27;;;;5324:1;5312:14;;;;5191:19;;5161:236;;;5165:3;5425:6;5416:7;5413:19;5410:201;;;5486:19;;;5480:26;-1:-1:-1;;5569:1:1;5565:14;;;5581:3;5561:24;5557:37;5553:42;5538:58;5523:74;;5410:201;-1:-1:-1;;;;;5657:1:1;5641:14;;;5637:22;5624:36;;-1:-1:-1;4575:1352:1:o;:::-;201:5974:0;;;;;;",
  "sourcePath": "contracts/TokenERC20.sol",
  "type": "contract"
}